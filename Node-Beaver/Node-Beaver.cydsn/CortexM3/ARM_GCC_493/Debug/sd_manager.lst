ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"sd_manager.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	pfile,4,4
  19              		.global	sd_ok
  20              		.bss
  21              		.type	sd_ok, %object
  22              		.size	sd_ok, 1
  23              	sd_ok:
  24 0000 00       		.space	1
  25              		.global	set_time_file
  26              		.section	.rodata
  27              		.align	2
  28              		.type	set_time_file, %object
  29              		.size	set_time_file, 14
  30              	set_time_file:
  31 0000 5C736574 		.ascii	"\\set_time.txt\000"
  31      5F74696D 
  31      652E7478 
  31      7400
  32              		.global	format_file
  33 000e 0000     		.align	2
  34              		.type	format_file, %object
  35              		.size	format_file, 12
  36              	format_file:
  37 0010 5C666F72 		.ascii	"\\format.txt\000"
  37      6D61742E 
  37      74787400 
  38              		.comm	sd_queue,16384,4
  39              		.global	sd_head
  40              		.bss
  41 0001 00       		.align	1
  42              		.type	sd_head, %object
  43              		.size	sd_head, 2
  44              	sd_head:
  45 0002 0000     		.space	2
  46              		.global	sd_tail
  47              		.align	1
  48              		.type	sd_tail, %object
  49              		.size	sd_tail, 2
  50              	sd_tail:
  51 0004 0000     		.space	2
  52              		.section	.text.power_interrupt,"ax",%progbits
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 2


  53              		.align	2
  54              		.global	power_interrupt
  55              		.thumb
  56              		.thumb_func
  57              		.type	power_interrupt, %function
  58              	power_interrupt:
  59              	.LFB63:
  60              		.file 1 "sd_manager.c"
   1:sd_manager.c  **** #include "sd_manager.h"
   2:sd_manager.c  **** 
   3:sd_manager.c  **** 
   4:sd_manager.c  **** FS_FILE* pfile;
   5:sd_manager.c  **** uint8_t sd_ok = 0;
   6:sd_manager.c  **** 
   7:sd_manager.c  **** const char set_time_file[] = "\\set_time.txt";
   8:sd_manager.c  **** const char format_file[] = "\\format.txt";
   9:sd_manager.c  **** 
  10:sd_manager.c  **** DataPacket sd_queue[SD_QUEUE_LENGTH];
  11:sd_manager.c  **** uint16_t sd_head = 0, sd_tail = 0;
  12:sd_manager.c  **** 
  13:sd_manager.c  **** 	
  14:sd_manager.c  **** CY_ISR(power_interrupt) {
  61              		.loc 1 14 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  15:sd_manager.c  ****     LED_Write(1);
  71              		.loc 1 15 0
  72 0004 0120     		movs	r0, #1
  73 0006 FFF7FEFF 		bl	LED_Write
  16:sd_manager.c  **** 	sd_stop();
  74              		.loc 1 16 0
  75 000a FFF7FEFF 		bl	sd_stop
  17:sd_manager.c  **** 	power_isr_ClearPending();
  76              		.loc 1 17 0
  77 000e FFF7FEFF 		bl	power_isr_ClearPending
  18:sd_manager.c  ****     CyDelay(1000);
  78              		.loc 1 18 0
  79 0012 4FF47A70 		mov	r0, #1000
  80 0016 FFF7FEFF 		bl	CyDelay
  81              	.L2:
  19:sd_manager.c  ****     for(;;); // halt program until IC shuts down
  82              		.loc 1 19 0 discriminator 1
  83 001a FEE7     		b	.L2
  84              		.cfi_endproc
  85              	.LFE63:
  86              		.size	power_interrupt, .-power_interrupt
  87              		.section	.text.sd_interrupt,"ax",%progbits
  88              		.align	2
  89              		.global	sd_interrupt
  90              		.thumb
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 3


  91              		.thumb_func
  92              		.type	sd_interrupt, %function
  93              	sd_interrupt:
  94              	.LFB64:
  20:sd_manager.c  **** } // CY_ISR(power_interrupt)
  21:sd_manager.c  **** 
  22:sd_manager.c  **** //triggers every second
  23:sd_manager.c  **** CY_ISR(sd_interrupt) {
  95              		.loc 1 23 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 1, uses_anonymous_args = 0
  99 0000 80B5     		push	{r7, lr}
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 7, -8
 102              		.cfi_offset 14, -4
 103 0002 00AF     		add	r7, sp, #0
 104              		.cfi_def_cfa_register 7
  24:sd_manager.c  **** 	sd_write();
 105              		.loc 1 24 0
 106 0004 FFF7FEFF 		bl	sd_write
  25:sd_manager.c  **** }
 107              		.loc 1 25 0
 108 0008 80BD     		pop	{r7, pc}
 109              		.cfi_endproc
 110              	.LFE64:
 111              		.size	sd_interrupt, .-sd_interrupt
 112 000a 00BF     		.section	.rodata
 113              		.align	2
 114              	.LC0:
 115 001c 7200     		.ascii	"r\000"
 116 001e 0000     		.align	2
 117              	.LC1:
 118 0020 00       		.ascii	"\000"
 119 0021 000000   		.align	2
 120              	.LC2:
 121 0024 6C6F6773 		.ascii	"logs\000"
 121      00
 122 0029 000000   		.align	2
 123              	.LC3:
 124 002c 5C6C6F67 		.ascii	"\\logs\\%04u-%02u-%02u\000"
 124      735C2530 
 124      34752D25 
 124      3032752D 
 124      25303275 
 125 0041 000000   		.align	2
 126              	.LC4:
 127 0044 25735C28 		.ascii	"%s\\(%04u-%02u-%02u)_%02u.%02u.%02u.csv\000"
 127      25303475 
 127      2D253032 
 127      752D2530 
 127      3275295F 
 128 006b 00       		.align	2
 129              	.LC5:
 130 006c 7700     		.ascii	"w\000"
 131              		.section	.text.sd_init,"ax",%progbits
 132              		.align	2
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 4


 133              		.global	sd_init
 134              		.thumb
 135              		.thumb_func
 136              		.type	sd_init, %function
 137              	sd_init:
 138              	.LFB65:
  26:sd_manager.c  **** 
  27:sd_manager.c  **** /* sd_init()
  28:sd_manager.c  **** 	Takes Time struct (time). Returns nothing.
  29:sd_manager.c  **** 
  30:sd_manager.c  **** 	Initializes SD card filesystem.
  31:sd_manager.c  **** 	The following events will cause the sd_ok flag to be reset, which aborts all
  32:sd_manager.c  **** 	SD functions:
  33:sd_manager.c  **** 		- the SD card is not found
  34:sd_manager.c  **** 		- unable to create the "LOGS" directory
  35:sd_manager.c  **** 		- unable to create a directory named after the date
  36:sd_manager.c  **** 		- unable to create and open file for writing
  37:sd_manager.c  **** 
  38:sd_manager.c  **** 	sd_ok is set when the SD card is functional */
  39:sd_manager.c  **** void sd_init(Time time) {
 139              		.loc 1 39 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 128
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 144              		.cfi_def_cfa_offset 20
 145              		.cfi_offset 4, -20
 146              		.cfi_offset 5, -16
 147              		.cfi_offset 6, -12
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 A7B0     		sub	sp, sp, #156
 151              		.cfi_def_cfa_offset 176
 152 0004 06AF     		add	r7, sp, #24
 153              		.cfi_def_cfa 7, 152
 154 0006 3C46     		mov	r4, r7
 155 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
  40:sd_manager.c  **** 	/* power_isr note:
  41:sd_manager.c  **** 		Triggers unexpectedly due to floating pin/environmental voltages and
  42:sd_manager.c  **** 		capacitance. power isr is disabled for prototyping only.	*/
  43:sd_manager.c  **** 	power_comp_Start();
 156              		.loc 1 43 0
 157 000c FFF7FEFF 		bl	power_comp_Start
  44:sd_manager.c  **** 	power_isr_ClearPending();
 158              		.loc 1 44 0
 159 0010 FFF7FEFF 		bl	power_isr_ClearPending
  45:sd_manager.c  **** 	power_isr_StartEx(power_interrupt);
 160              		.loc 1 45 0
 161 0014 5948     		ldr	r0, .L12
 162 0016 FFF7FEFF 		bl	power_isr_StartEx
  46:sd_manager.c  **** 	sd_timer_Start();
 163              		.loc 1 46 0
 164 001a FFF7FEFF 		bl	sd_timer_Start
  47:sd_manager.c  **** 	sd_isr_StartEx(sd_interrupt);
 165              		.loc 1 47 0
 166 001e 5848     		ldr	r0, .L12+4
 167 0020 FFF7FEFF 		bl	sd_isr_StartEx
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 5


  48:sd_manager.c  ****     
  49:sd_manager.c  **** 	FS_Init();
 168              		.loc 1 49 0
 169 0024 FFF7FEFF 		bl	FS_Init
  50:sd_manager.c  ****     FS_FAT_SupportLFN();            //enable long file name: filenames>8bytes
 170              		.loc 1 50 0
 171 0028 FFF7FEFF 		bl	FS_FAT_SupportLFN
  51:sd_manager.c  **** 	sd_ok = 1;
 172              		.loc 1 51 0
 173 002c 554B     		ldr	r3, .L12+8
 174 002e 0122     		movs	r2, #1
 175 0030 1A70     		strb	r2, [r3]
  52:sd_manager.c  **** 	char date_str[32], file_str[64];
  53:sd_manager.c  **** 
  54:sd_manager.c  **** 	if(FS_GetNumVolumes() == 1) {
 176              		.loc 1 54 0
 177 0032 FFF7FEFF 		bl	FS_GetNumVolumes
 178 0036 0346     		mov	r3, r0
 179 0038 012B     		cmp	r3, #1
 180 003a 40F09880 		bne	.L5
 181              	.LBB2:
  55:sd_manager.c  **** 		FS_SetFileWriteMode(FS_WRITEMODE_FAST);
 182              		.loc 1 55 0
 183 003e 0220     		movs	r0, #2
 184 0040 FFF7FEFF 		bl	FS_SetFileWriteMode
  56:sd_manager.c  **** 		if((pfile = FS_FOpen(format_file, "r")) && FS_GetVolumeSize("") <= 0xFFFFFFFF)	//for FAT only
 185              		.loc 1 56 0
 186 0044 5048     		ldr	r0, .L12+12
 187 0046 5149     		ldr	r1, .L12+16
 188 0048 FFF7FEFF 		bl	FS_FOpen
 189 004c 0246     		mov	r2, r0
 190 004e 504B     		ldr	r3, .L12+20
 191 0050 1A60     		str	r2, [r3]
 192 0052 4F4B     		ldr	r3, .L12+20
 193 0054 1B68     		ldr	r3, [r3]
 194 0056 002B     		cmp	r3, #0
 195 0058 05D0     		beq	.L6
 196              		.loc 1 56 0 is_stmt 0 discriminator 1
 197 005a 4E48     		ldr	r0, .L12+24
 198 005c FFF7FEFF 		bl	FS_GetVolumeSize
  57:sd_manager.c  **** 			FS_FormatSD("");
 199              		.loc 1 57 0 is_stmt 1 discriminator 1
 200 0060 4C48     		ldr	r0, .L12+24
 201 0062 FFF7FEFF 		bl	FS_FormatSD
 202              	.L6:
  58:sd_manager.c  ****         sd_time_set(time);          //set time from a file
 203              		.loc 1 58 0
 204 0066 3B46     		mov	r3, r7
 205 0068 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 206 006a FFF7FEFF 		bl	sd_time_set
  59:sd_manager.c  **** 		
  60:sd_manager.c  ****         //create logs folder
  61:sd_manager.c  **** 		if(FS_ATTR_DIRECTORY != FS_GetFileAttributes("logs")) { // if logs not a dir
 207              		.loc 1 61 0
 208 006e 4A48     		ldr	r0, .L12+28
 209 0070 FFF7FEFF 		bl	FS_GetFileAttributes
 210 0074 0346     		mov	r3, r0
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 6


 211 0076 102B     		cmp	r3, #16
 212 0078 09D0     		beq	.L7
  62:sd_manager.c  **** 			if(FS_MkDir("logs")) {
 213              		.loc 1 62 0
 214 007a 4748     		ldr	r0, .L12+28
 215 007c FFF7FEFF 		bl	FS_MkDir
 216 0080 0346     		mov	r3, r0
 217 0082 002B     		cmp	r3, #0
 218 0084 03D0     		beq	.L7
  63:sd_manager.c  **** 				sd_ok = 0;
 219              		.loc 1 63 0
 220 0086 3F4B     		ldr	r3, .L12+8
 221 0088 0022     		movs	r2, #0
 222 008a 1A70     		strb	r2, [r3]
  64:sd_manager.c  **** 				return;
 223              		.loc 1 64 0
 224 008c 72E0     		b	.L4
 225              	.L7:
  65:sd_manager.c  **** 			} // if logs folder can't be created
  66:sd_manager.c  ****         }
  67:sd_manager.c  **** 
  68:sd_manager.c  **** 
  69:sd_manager.c  **** 		// create date folder 
  70:sd_manager.c  ****         sprintf(date_str, "\\logs\\%04u-%02u-%02u", time.year, time.month, time.day);
 226              		.loc 1 70 0
 227 008e BB89     		ldrh	r3, [r7, #12]
 228 0090 1D46     		mov	r5, r3
 229 0092 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 230 0094 1C46     		mov	r4, r3
 231 0096 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 232 0098 1A46     		mov	r2, r3
 233 009a 07F16003 		add	r3, r7, #96
 234 009e 0092     		str	r2, [sp]
 235 00a0 1846     		mov	r0, r3
 236 00a2 3E49     		ldr	r1, .L12+32
 237 00a4 2A46     		mov	r2, r5
 238 00a6 2346     		mov	r3, r4
 239 00a8 FFF7FEFF 		bl	sprintf
  71:sd_manager.c  **** 		if(FS_ATTR_DIRECTORY != FS_GetFileAttributes(date_str)) { // if day not a dir
 240              		.loc 1 71 0
 241 00ac 07F16003 		add	r3, r7, #96
 242 00b0 1846     		mov	r0, r3
 243 00b2 FFF7FEFF 		bl	FS_GetFileAttributes
 244 00b6 0346     		mov	r3, r0
 245 00b8 102B     		cmp	r3, #16
 246 00ba 0BD0     		beq	.L9
  72:sd_manager.c  **** 			if(FS_MkDir(date_str)) {
 247              		.loc 1 72 0
 248 00bc 07F16003 		add	r3, r7, #96
 249 00c0 1846     		mov	r0, r3
 250 00c2 FFF7FEFF 		bl	FS_MkDir
 251 00c6 0346     		mov	r3, r0
 252 00c8 002B     		cmp	r3, #0
 253 00ca 03D0     		beq	.L9
  73:sd_manager.c  **** 				sd_ok = 0;
 254              		.loc 1 73 0
 255 00cc 2D4B     		ldr	r3, .L12+8
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 7


 256 00ce 0022     		movs	r2, #0
 257 00d0 1A70     		strb	r2, [r3]
  74:sd_manager.c  **** 				return;
 258              		.loc 1 74 0
 259 00d2 4FE0     		b	.L4
 260              	.L9:
  75:sd_manager.c  **** 			} // if day folder can't be created
  76:sd_manager.c  ****         }
  77:sd_manager.c  ****         
  78:sd_manager.c  ****         // create log file
  79:sd_manager.c  ****         sprintf(file_str, "%s\\(%04u-%02u-%02u)_%02u.%02u.%02u.csv",
  80:sd_manager.c  ****             date_str, time.year, time.month, time.day, time.hour, time.minute, time.second);
 261              		.loc 1 80 0
 262 00d4 BB89     		ldrh	r3, [r7, #12]
  79:sd_manager.c  ****             date_str, time.year, time.month, time.day, time.hour, time.minute, time.second);
 263              		.loc 1 79 0
 264 00d6 9E46     		mov	lr, r3
 265              		.loc 1 80 0
 266 00d8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
  79:sd_manager.c  ****             date_str, time.year, time.month, time.day, time.hour, time.minute, time.second);
 267              		.loc 1 79 0
 268 00da 1E46     		mov	r6, r3
 269              		.loc 1 80 0
 270 00dc 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
  79:sd_manager.c  ****             date_str, time.year, time.month, time.day, time.hour, time.minute, time.second);
 271              		.loc 1 79 0
 272 00de 1D46     		mov	r5, r3
 273              		.loc 1 80 0
 274 00e0 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
  79:sd_manager.c  ****             date_str, time.year, time.month, time.day, time.hour, time.minute, time.second);
 275              		.loc 1 79 0
 276 00e2 1C46     		mov	r4, r3
 277              		.loc 1 80 0
 278 00e4 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  79:sd_manager.c  ****             date_str, time.year, time.month, time.day, time.hour, time.minute, time.second);
 279              		.loc 1 79 0
 280 00e6 1846     		mov	r0, r3
 281              		.loc 1 80 0
 282 00e8 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
  79:sd_manager.c  ****             date_str, time.year, time.month, time.day, time.hour, time.minute, time.second);
 283              		.loc 1 79 0
 284 00ea 1946     		mov	r1, r3
 285 00ec 07F12002 		add	r2, r7, #32
 286 00f0 07F16003 		add	r3, r7, #96
 287 00f4 0096     		str	r6, [sp]
 288 00f6 0195     		str	r5, [sp, #4]
 289 00f8 0294     		str	r4, [sp, #8]
 290 00fa 0390     		str	r0, [sp, #12]
 291 00fc 0491     		str	r1, [sp, #16]
 292 00fe 1046     		mov	r0, r2
 293 0100 2749     		ldr	r1, .L12+36
 294 0102 1A46     		mov	r2, r3
 295 0104 7346     		mov	r3, lr
 296 0106 FFF7FEFF 		bl	sprintf
  81:sd_manager.c  **** 		pfile = FS_FOpen(file_str, "w"); //create and open new file for writing
 297              		.loc 1 81 0
 298 010a 07F12003 		add	r3, r7, #32
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 8


 299 010e 1846     		mov	r0, r3
 300 0110 2449     		ldr	r1, .L12+40
 301 0112 FFF7FEFF 		bl	FS_FOpen
 302 0116 0246     		mov	r2, r0
 303 0118 1D4B     		ldr	r3, .L12+20
 304 011a 1A60     		str	r2, [r3]
  82:sd_manager.c  **** 		if(pfile == NULL) {
 305              		.loc 1 82 0
 306 011c 1C4B     		ldr	r3, .L12+20
 307 011e 1B68     		ldr	r3, [r3]
 308 0120 002B     		cmp	r3, #0
 309 0122 04D1     		bne	.L10
  83:sd_manager.c  **** 			sd_ok = 0;
 310              		.loc 1 83 0
 311 0124 174B     		ldr	r3, .L12+8
 312 0126 0022     		movs	r2, #0
 313 0128 1A70     		strb	r2, [r3]
  84:sd_manager.c  **** 			return;
 314              		.loc 1 84 0
 315 012a 00BF     		nop
 316 012c 22E0     		b	.L4
 317              	.L10:
  85:sd_manager.c  **** 		} // if file does not exist
  86:sd_manager.c  **** 
  87:sd_manager.c  **** 		// Set file time here
  88:sd_manager.c  **** 		FS_FILETIME file_time;
  89:sd_manager.c  **** 		unsigned long file_timestamp;
  90:sd_manager.c  **** 		
  91:sd_manager.c  **** 		file_time.Year = time.year;
 318              		.loc 1 91 0
 319 012e BB89     		ldrh	r3, [r7, #12]
 320 0130 BB82     		strh	r3, [r7, #20]	@ movhi
  92:sd_manager.c  **** 		file_time.Month = time.month;
 321              		.loc 1 92 0
 322 0132 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 323 0134 9BB2     		uxth	r3, r3
 324 0136 FB82     		strh	r3, [r7, #22]	@ movhi
  93:sd_manager.c  **** 		file_time.Day = time.day;
 325              		.loc 1 93 0
 326 0138 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 327 013a 9BB2     		uxth	r3, r3
 328 013c 3B83     		strh	r3, [r7, #24]	@ movhi
  94:sd_manager.c  **** 		file_time.Hour = time.hour;
 329              		.loc 1 94 0
 330 013e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 331 0140 9BB2     		uxth	r3, r3
 332 0142 7B83     		strh	r3, [r7, #26]	@ movhi
  95:sd_manager.c  **** 		file_time.Minute = time.minute;
 333              		.loc 1 95 0
 334 0144 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 335 0146 9BB2     		uxth	r3, r3
 336 0148 BB83     		strh	r3, [r7, #28]	@ movhi
  96:sd_manager.c  **** 		file_time.Second = time.second;
 337              		.loc 1 96 0
 338 014a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 339 014c 9BB2     		uxth	r3, r3
 340 014e FB83     		strh	r3, [r7, #30]	@ movhi
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 9


  97:sd_manager.c  **** 
  98:sd_manager.c  **** 		FS_FileTimeToTimeStamp(&file_time, &file_timestamp);
 341              		.loc 1 98 0
 342 0150 07F11402 		add	r2, r7, #20
 343 0154 07F11003 		add	r3, r7, #16
 344 0158 1046     		mov	r0, r2
 345 015a 1946     		mov	r1, r3
 346 015c FFF7FEFF 		bl	FS_FileTimeToTimeStamp
  99:sd_manager.c  **** 		FS_SetFileTime(file_str, file_timestamp);
 347              		.loc 1 99 0
 348 0160 3B69     		ldr	r3, [r7, #16]
 349 0162 07F12002 		add	r2, r7, #32
 350 0166 1046     		mov	r0, r2
 351 0168 1946     		mov	r1, r3
 352 016a FFF7FEFF 		bl	FS_SetFileTime
 353              	.L5:
 354              	.LBE2:
 100:sd_manager.c  **** 		/*FS_SetFileTimeEx(file_str, file_timestamp, FS_FILETIME_CREATE);	//doesnt work
 101:sd_manager.c  **** 		FS_SetFileTimeEx(file_str, file_timestamp, FS_FILETIME_ACCESS);
 102:sd_manager.c  **** 		FS_SetFileTimeEx(file_str, file_timestamp, FS_FILETIME_MODIFY);*/
 103:sd_manager.c  **** 	} // if a single file volume exists
 104:sd_manager.c  ****     FS_Sync("");
 355              		.loc 1 104 0 discriminator 1
 356 016e 0948     		ldr	r0, .L12+24
 357 0170 FFF7FEFF 		bl	FS_Sync
 358              	.L4:
 105:sd_manager.c  **** } // sd_init()
 359              		.loc 1 105 0
 360 0174 8437     		adds	r7, r7, #132
 361              		.cfi_def_cfa_offset 20
 362 0176 BD46     		mov	sp, r7
 363              		.cfi_def_cfa_register 13
 364              		@ sp needed
 365 0178 F0BD     		pop	{r4, r5, r6, r7, pc}
 366              	.L13:
 367 017a 00BF     		.align	2
 368              	.L12:
 369 017c 00000000 		.word	power_interrupt
 370 0180 00000000 		.word	sd_interrupt
 371 0184 00000000 		.word	sd_ok
 372 0188 00000000 		.word	format_file
 373 018c 1C000000 		.word	.LC0
 374 0190 00000000 		.word	pfile
 375 0194 20000000 		.word	.LC1
 376 0198 24000000 		.word	.LC2
 377 019c 2C000000 		.word	.LC3
 378 01a0 44000000 		.word	.LC4
 379 01a4 6C000000 		.word	.LC5
 380              		.cfi_endproc
 381              	.LFE65:
 382              		.size	sd_init, .-sd_init
 383              		.section	.rodata
 384 006e 0000     		.align	2
 385              	.LC6:
 386 0070 2F3A200D 		.ascii	"/: \015\012\000"
 386      0A00
 387              		.section	.text.sd_time_set,"ax",%progbits
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 10


 388              		.align	2
 389              		.global	sd_time_set
 390              		.thumb
 391              		.thumb_func
 392              		.type	sd_time_set, %function
 393              	sd_time_set:
 394              	.LFB66:
 106:sd_manager.c  **** 
 107:sd_manager.c  **** 
 108:sd_manager.c  **** /*  Sets the RTC time from a file called set_time.txt if it exists
 109:sd_manager.c  ****     
 110:sd_manager.c  **** 	Enter the following two lines of text in a file called "set_time.txt" in
 111:sd_manager.c  **** 	the /LOGS folder to set the time. The line breaks can consist of \r or
 112:sd_manager.c  **** 	\n characters.
 113:sd_manager.c  **** 	
 114:sd_manager.c  **** 	year/month/day
 115:sd_manager.c  **** 	24-hour:minute:second */
 116:sd_manager.c  **** void sd_time_set(Time time) {
 395              		.loc 1 116 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 104
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399 0000 90B5     		push	{r4, r7, lr}
 400              		.cfi_def_cfa_offset 12
 401              		.cfi_offset 4, -12
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 9BB0     		sub	sp, sp, #108
 405              		.cfi_def_cfa_offset 120
 406 0004 00AF     		add	r7, sp, #0
 407              		.cfi_def_cfa_register 7
 408 0006 3C46     		mov	r4, r7
 409 0008 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 117:sd_manager.c  **** 	if((pfile = FS_FOpen(set_time_file, "r"))) {
 410              		.loc 1 117 0
 411 000c 5B48     		ldr	r0, .L23
 412 000e 5C49     		ldr	r1, .L23+4
 413 0010 FFF7FEFF 		bl	FS_FOpen
 414 0014 0246     		mov	r2, r0
 415 0016 5B4B     		ldr	r3, .L23+8
 416 0018 1A60     		str	r2, [r3]
 417 001a 5A4B     		ldr	r3, .L23+8
 418 001c 1B68     		ldr	r3, [r3]
 419 001e 002B     		cmp	r3, #0
 420 0020 00F0A980 		beq	.L14
 421              	.LBB3:
 118:sd_manager.c  **** 		char buffer[64];
 119:sd_manager.c  **** 		char *ptr;
 120:sd_manager.c  **** 		uint16_t num;
 121:sd_manager.c  **** 		Time tmp_time;
 122:sd_manager.c  **** 
 123:sd_manager.c  **** 		FS_Read(pfile, buffer, 64); // read entire file
 422              		.loc 1 123 0
 423 0024 574B     		ldr	r3, .L23+8
 424 0026 1A68     		ldr	r2, [r3]
 425 0028 07F11003 		add	r3, r7, #16
 426 002c 1046     		mov	r0, r2
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 11


 427 002e 1946     		mov	r1, r3
 428 0030 4022     		movs	r2, #64
 429 0032 FFF7FEFF 		bl	FS_Read
 124:sd_manager.c  **** 		
 125:sd_manager.c  **** 		ptr = strtok(buffer, "/: \r\n"); // year
 430              		.loc 1 125 0
 431 0036 07F11003 		add	r3, r7, #16
 432 003a 1846     		mov	r0, r3
 433 003c 5249     		ldr	r1, .L23+12
 434 003e FFF7FEFF 		bl	strtok
 435 0042 7866     		str	r0, [r7, #100]
 126:sd_manager.c  **** 		num = atoi(ptr);
 436              		.loc 1 126 0
 437 0044 786E     		ldr	r0, [r7, #100]
 438 0046 FFF7FEFF 		bl	atoi
 439 004a 0346     		mov	r3, r0
 440 004c A7F86230 		strh	r3, [r7, #98]	@ movhi
 127:sd_manager.c  **** 		if(num <= 99) tmp_time.year = num;  // 2 digit year
 441              		.loc 1 127 0
 442 0050 B7F86230 		ldrh	r3, [r7, #98]
 443 0054 632B     		cmp	r3, #99
 444 0056 04D8     		bhi	.L16
 445              		.loc 1 127 0 is_stmt 0 discriminator 1
 446 0058 B7F86230 		ldrh	r3, [r7, #98]	@ movhi
 447 005c A7F85C30 		strh	r3, [r7, #92]	@ movhi
 448 0060 12E0     		b	.L17
 449              	.L16:
 128:sd_manager.c  **** 		else if(num >= 1900) tmp_time.year = num % 100; // 4 digit year
 450              		.loc 1 128 0 is_stmt 1
 451 0062 B7F86230 		ldrh	r3, [r7, #98]
 452 0066 40F26B72 		movw	r2, #1899
 453 006a 9342     		cmp	r3, r2
 454 006c 0CD9     		bls	.L17
 455              		.loc 1 128 0 is_stmt 0 discriminator 1
 456 006e B7F86230 		ldrh	r3, [r7, #98]
 457 0072 464A     		ldr	r2, .L23+16
 458 0074 A2FB0312 		umull	r1, r2, r2, r3
 459 0078 5209     		lsrs	r2, r2, #5
 460 007a 6421     		movs	r1, #100
 461 007c 01FB02F2 		mul	r2, r1, r2
 462 0080 9B1A     		subs	r3, r3, r2
 463 0082 9BB2     		uxth	r3, r3
 464 0084 A7F85C30 		strh	r3, [r7, #92]	@ movhi
 465              	.L17:
 129:sd_manager.c  **** 
 130:sd_manager.c  **** 		ptr = strtok(NULL, "/: \r\n"); // month
 466              		.loc 1 130 0 is_stmt 1
 467 0088 0020     		movs	r0, #0
 468 008a 3F49     		ldr	r1, .L23+12
 469 008c FFF7FEFF 		bl	strtok
 470 0090 7866     		str	r0, [r7, #100]
 131:sd_manager.c  **** 		num = atoi(ptr);
 471              		.loc 1 131 0
 472 0092 786E     		ldr	r0, [r7, #100]
 473 0094 FFF7FEFF 		bl	atoi
 474 0098 0346     		mov	r3, r0
 475 009a A7F86230 		strh	r3, [r7, #98]	@ movhi
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 12


 132:sd_manager.c  **** 		if(num <= 12) tmp_time.month = num;
 476              		.loc 1 132 0
 477 009e B7F86230 		ldrh	r3, [r7, #98]
 478 00a2 0C2B     		cmp	r3, #12
 479 00a4 04D8     		bhi	.L18
 480              		.loc 1 132 0 is_stmt 0 discriminator 1
 481 00a6 B7F86230 		ldrh	r3, [r7, #98]	@ movhi
 482 00aa DBB2     		uxtb	r3, r3
 483 00ac 87F85030 		strb	r3, [r7, #80]
 484              	.L18:
 133:sd_manager.c  **** 		
 134:sd_manager.c  **** 		ptr = strtok(NULL, "/: \r\n"); // day
 485              		.loc 1 134 0 is_stmt 1
 486 00b0 0020     		movs	r0, #0
 487 00b2 3549     		ldr	r1, .L23+12
 488 00b4 FFF7FEFF 		bl	strtok
 489 00b8 7866     		str	r0, [r7, #100]
 135:sd_manager.c  **** 		num = atoi(ptr);
 490              		.loc 1 135 0
 491 00ba 786E     		ldr	r0, [r7, #100]
 492 00bc FFF7FEFF 		bl	atoi
 493 00c0 0346     		mov	r3, r0
 494 00c2 A7F86230 		strh	r3, [r7, #98]	@ movhi
 136:sd_manager.c  **** 		if(num <= 31) tmp_time.day = num;
 495              		.loc 1 136 0
 496 00c6 B7F86230 		ldrh	r3, [r7, #98]
 497 00ca 1F2B     		cmp	r3, #31
 498 00cc 04D8     		bhi	.L19
 499              		.loc 1 136 0 is_stmt 0 discriminator 1
 500 00ce B7F86230 		ldrh	r3, [r7, #98]	@ movhi
 501 00d2 DBB2     		uxtb	r3, r3
 502 00d4 87F85130 		strb	r3, [r7, #81]
 503              	.L19:
 137:sd_manager.c  **** 			
 138:sd_manager.c  **** 		ptr = strtok(NULL, "/: \r\n"); // 24-hour
 504              		.loc 1 138 0 is_stmt 1
 505 00d8 0020     		movs	r0, #0
 506 00da 2B49     		ldr	r1, .L23+12
 507 00dc FFF7FEFF 		bl	strtok
 508 00e0 7866     		str	r0, [r7, #100]
 139:sd_manager.c  **** 		num = atoi(ptr);
 509              		.loc 1 139 0
 510 00e2 786E     		ldr	r0, [r7, #100]
 511 00e4 FFF7FEFF 		bl	atoi
 512 00e8 0346     		mov	r3, r0
 513 00ea A7F86230 		strh	r3, [r7, #98]	@ movhi
 140:sd_manager.c  **** 		if(num <= 23) tmp_time.hour = num;
 514              		.loc 1 140 0
 515 00ee B7F86230 		ldrh	r3, [r7, #98]
 516 00f2 172B     		cmp	r3, #23
 517 00f4 04D8     		bhi	.L20
 518              		.loc 1 140 0 is_stmt 0 discriminator 1
 519 00f6 B7F86230 		ldrh	r3, [r7, #98]	@ movhi
 520 00fa DBB2     		uxtb	r3, r3
 521 00fc 87F85230 		strb	r3, [r7, #82]
 522              	.L20:
 141:sd_manager.c  **** 
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 13


 142:sd_manager.c  **** 		ptr = strtok(NULL, "/: \r\n"); // minute
 523              		.loc 1 142 0 is_stmt 1
 524 0100 0020     		movs	r0, #0
 525 0102 2149     		ldr	r1, .L23+12
 526 0104 FFF7FEFF 		bl	strtok
 527 0108 7866     		str	r0, [r7, #100]
 143:sd_manager.c  **** 		num = atoi(ptr);
 528              		.loc 1 143 0
 529 010a 786E     		ldr	r0, [r7, #100]
 530 010c FFF7FEFF 		bl	atoi
 531 0110 0346     		mov	r3, r0
 532 0112 A7F86230 		strh	r3, [r7, #98]	@ movhi
 144:sd_manager.c  **** 		if(num <= 59) tmp_time.minute = num;
 533              		.loc 1 144 0
 534 0116 B7F86230 		ldrh	r3, [r7, #98]
 535 011a 3B2B     		cmp	r3, #59
 536 011c 04D8     		bhi	.L21
 537              		.loc 1 144 0 is_stmt 0 discriminator 1
 538 011e B7F86230 		ldrh	r3, [r7, #98]	@ movhi
 539 0122 DBB2     		uxtb	r3, r3
 540 0124 87F85330 		strb	r3, [r7, #83]
 541              	.L21:
 145:sd_manager.c  **** 
 146:sd_manager.c  **** 		ptr = strtok(NULL, "/: \r\n"); // second 
 542              		.loc 1 146 0 is_stmt 1
 543 0128 0020     		movs	r0, #0
 544 012a 1749     		ldr	r1, .L23+12
 545 012c FFF7FEFF 		bl	strtok
 546 0130 7866     		str	r0, [r7, #100]
 147:sd_manager.c  **** 		num = atoi(ptr);
 547              		.loc 1 147 0
 548 0132 786E     		ldr	r0, [r7, #100]
 549 0134 FFF7FEFF 		bl	atoi
 550 0138 0346     		mov	r3, r0
 551 013a A7F86230 		strh	r3, [r7, #98]	@ movhi
 148:sd_manager.c  **** 		if(num <= 59) tmp_time.second = num;
 552              		.loc 1 148 0
 553 013e B7F86230 		ldrh	r3, [r7, #98]
 554 0142 3B2B     		cmp	r3, #59
 555 0144 04D8     		bhi	.L22
 556              		.loc 1 148 0 is_stmt 0 discriminator 1
 557 0146 B7F86230 		ldrh	r3, [r7, #98]	@ movhi
 558 014a DBB2     		uxtb	r3, r3
 559 014c 87F85430 		strb	r3, [r7, #84]
 560              	.L22:
 149:sd_manager.c  **** 
 150:sd_manager.c  **** 		FS_FClose(pfile);
 561              		.loc 1 150 0 is_stmt 1
 562 0150 0C4B     		ldr	r3, .L23+8
 563 0152 1B68     		ldr	r3, [r3]
 564 0154 1846     		mov	r0, r3
 565 0156 FFF7FEFF 		bl	FS_FClose
 151:sd_manager.c  **** 		FS_Remove(set_time_file); // delete file
 566              		.loc 1 151 0
 567 015a 0848     		ldr	r0, .L23
 568 015c FFF7FEFF 		bl	FS_Remove
 152:sd_manager.c  **** 		
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 14


 153:sd_manager.c  **** 		time_set(tmp_time); // set the new time
 569              		.loc 1 153 0
 570 0160 07F15003 		add	r3, r7, #80
 571 0164 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 572 0166 FFF7FEFF 		bl	time_set
 154:sd_manager.c  **** 		time = tmp_time; // use new time for file names
 573              		.loc 1 154 0
 574 016a 3C46     		mov	r4, r7
 575 016c 07F15003 		add	r3, r7, #80
 576 0170 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 577 0172 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 578              	.L14:
 579              	.LBE3:
 155:sd_manager.c  **** 	} // try to find file and set time
 156:sd_manager.c  **** } //sd_time_set()
 580              		.loc 1 156 0
 581 0176 6C37     		adds	r7, r7, #108
 582              		.cfi_def_cfa_offset 12
 583 0178 BD46     		mov	sp, r7
 584              		.cfi_def_cfa_register 13
 585              		@ sp needed
 586 017a 90BD     		pop	{r4, r7, pc}
 587              	.L24:
 588              		.align	2
 589              	.L23:
 590 017c 00000000 		.word	set_time_file
 591 0180 1C000000 		.word	.LC0
 592 0184 00000000 		.word	pfile
 593 0188 70000000 		.word	.LC6
 594 018c 1F85EB51 		.word	1374389535
 595              		.cfi_endproc
 596              	.LFE66:
 597              		.size	sd_time_set, .-sd_time_set
 598              		.section	.rodata
 599 0076 0000     		.align	2
 600              	.LC7:
 601 0078 25303358 		.ascii	"%03X,%u,%02X,%02X,%02X,%02X,%02X,%02X,%02X,%02X\012"
 601      2C25752C 
 601      25303258 
 601      2C253032 
 601      582C2530 
 602 00a8 00       		.ascii	"\000"
 603              		.section	.text.sd_write,"ax",%progbits
 604              		.align	2
 605              		.global	sd_write
 606              		.thumb
 607              		.thumb_func
 608              		.type	sd_write, %function
 609              	sd_write:
 610              	.LFB67:
 157:sd_manager.c  **** 
 158:sd_manager.c  **** 
 159:sd_manager.c  **** /* sd_write()
 160:sd_manager.c  **** 	Writes current to the SD card. 
 161:sd_manager.c  **** 	Synchronizes the filesystem after it is  written. */
 162:sd_manager.c  **** void sd_write() {
 611              		.loc 1 162 0
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 15


 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 72
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 616              		.cfi_def_cfa_offset 28
 617              		.cfi_offset 4, -28
 618              		.cfi_offset 5, -24
 619              		.cfi_offset 6, -20
 620              		.cfi_offset 7, -16
 621              		.cfi_offset 8, -12
 622              		.cfi_offset 9, -8
 623              		.cfi_offset 14, -4
 624 0004 9BB0     		sub	sp, sp, #108
 625              		.cfi_def_cfa_offset 136
 626 0006 08AF     		add	r7, sp, #32
 627              		.cfi_def_cfa 7, 104
 163:sd_manager.c  **** 	if(!sd_ok) return;
 628              		.loc 1 163 0
 629 0008 4D4B     		ldr	r3, .L30
 630 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 631 000c 002B     		cmp	r3, #0
 632 000e 00F09280 		beq	.L25
 164:sd_manager.c  **** 
 165:sd_manager.c  **** 	char buffer[64];
 166:sd_manager.c  **** 	short length = 0;
 633              		.loc 1 166 0
 634 0012 0023     		movs	r3, #0
 635 0014 A7F84630 		strh	r3, [r7, #70]	@ movhi
 167:sd_manager.c  **** 	
 168:sd_manager.c  ****     uint8_t atomic_state = CyEnterCriticalSection(); // BEGIN ATOMIC
 636              		.loc 1 168 0
 637 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 638 001c 0346     		mov	r3, r0
 639 001e 87F84530 		strb	r3, [r7, #69]
 169:sd_manager.c  **** 	for(sd_head=0; sd_head<sd_tail; sd_head++) {
 640              		.loc 1 169 0
 641 0022 484B     		ldr	r3, .L30+4
 642 0024 0022     		movs	r2, #0
 643 0026 1A80     		strh	r2, [r3]	@ movhi
 644 0028 71E0     		b	.L28
 645              	.L29:
 170:sd_manager.c  **** 		length = sprintf(buffer, "%03X,%u,%02X,%02X,%02X,%02X,%02X,%02X,%02X,%02X\n",
 171:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].id,
 646              		.loc 1 171 0 discriminator 3
 647 002a 464B     		ldr	r3, .L30+4
 648 002c 1B88     		ldrh	r3, [r3]
 649 002e 464A     		ldr	r2, .L30+8
 650 0030 1B01     		lsls	r3, r3, #4
 651 0032 1344     		add	r3, r3, r2
 652 0034 9B88     		ldrh	r3, [r3, #4]
 170:sd_manager.c  **** 		length = sprintf(buffer, "%03X,%u,%02X,%02X,%02X,%02X,%02X,%02X,%02X,%02X\n",
 653              		.loc 1 170 0 discriminator 3
 654 0036 9946     		mov	r9, r3
 172:sd_manager.c  **** 			MILLI_PERIOD - (unsigned)sd_queue[sd_head].millicounter,
 655              		.loc 1 172 0 discriminator 3
 656 0038 424B     		ldr	r3, .L30+4
 657 003a 1B88     		ldrh	r3, [r3]
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 16


 658 003c 424A     		ldr	r2, .L30+8
 659 003e 1B01     		lsls	r3, r3, #4
 660 0040 1344     		add	r3, r3, r2
 661 0042 1A68     		ldr	r2, [r3]
 170:sd_manager.c  **** 		length = sprintf(buffer, "%03X,%u,%02X,%02X,%02X,%02X,%02X,%02X,%02X,%02X\n",
 662              		.loc 1 170 0 discriminator 3
 663 0044 414B     		ldr	r3, .L30+12
 664 0046 9B1A     		subs	r3, r3, r2
 173:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[0],
 665              		.loc 1 173 0 discriminator 3
 666 0048 3E4A     		ldr	r2, .L30+4
 667 004a 1288     		ldrh	r2, [r2]
 668 004c 3E49     		ldr	r1, .L30+8
 669 004e 1201     		lsls	r2, r2, #4
 670 0050 0A44     		add	r2, r2, r1
 671 0052 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 170:sd_manager.c  **** 		length = sprintf(buffer, "%03X,%u,%02X,%02X,%02X,%02X,%02X,%02X,%02X,%02X\n",
 672              		.loc 1 170 0 discriminator 3
 673 0054 9046     		mov	r8, r2
 174:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[1],
 674              		.loc 1 174 0 discriminator 3
 675 0056 3B4A     		ldr	r2, .L30+4
 676 0058 1288     		ldrh	r2, [r2]
 677 005a 3B49     		ldr	r1, .L30+8
 678 005c 1201     		lsls	r2, r2, #4
 679 005e 0A44     		add	r2, r2, r1
 680 0060 0132     		adds	r2, r2, #1
 681 0062 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 170:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].id,
 682              		.loc 1 170 0 discriminator 3
 683 0064 9446     		mov	ip, r2
 175:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[2],
 684              		.loc 1 175 0 discriminator 3
 685 0066 374A     		ldr	r2, .L30+4
 686 0068 1288     		ldrh	r2, [r2]
 687 006a 3749     		ldr	r1, .L30+8
 688 006c 1201     		lsls	r2, r2, #4
 689 006e 0A44     		add	r2, r2, r1
 690 0070 0232     		adds	r2, r2, #2
 691 0072 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 170:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].id,
 692              		.loc 1 170 0 discriminator 3
 693 0074 9646     		mov	lr, r2
 176:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[3],
 694              		.loc 1 176 0 discriminator 3
 695 0076 334A     		ldr	r2, .L30+4
 696 0078 1288     		ldrh	r2, [r2]
 697 007a 3349     		ldr	r1, .L30+8
 698 007c 1201     		lsls	r2, r2, #4
 699 007e 0A44     		add	r2, r2, r1
 700 0080 0332     		adds	r2, r2, #3
 701 0082 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 170:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].id,
 702              		.loc 1 170 0 discriminator 3
 703 0084 1646     		mov	r6, r2
 177:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[4],
 704              		.loc 1 177 0 discriminator 3
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 17


 705 0086 2F4A     		ldr	r2, .L30+4
 706 0088 1288     		ldrh	r2, [r2]
 707 008a 2F49     		ldr	r1, .L30+8
 708 008c 1201     		lsls	r2, r2, #4
 709 008e 0A44     		add	r2, r2, r1
 710 0090 0432     		adds	r2, r2, #4
 711 0092 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 170:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].id,
 712              		.loc 1 170 0 discriminator 3
 713 0094 1546     		mov	r5, r2
 178:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[5],
 714              		.loc 1 178 0 discriminator 3
 715 0096 2B4A     		ldr	r2, .L30+4
 716 0098 1288     		ldrh	r2, [r2]
 717 009a 2B49     		ldr	r1, .L30+8
 718 009c 1201     		lsls	r2, r2, #4
 719 009e 0A44     		add	r2, r2, r1
 720 00a0 0532     		adds	r2, r2, #5
 721 00a2 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 170:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].id,
 722              		.loc 1 170 0 discriminator 3
 723 00a4 1446     		mov	r4, r2
 179:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[6],
 724              		.loc 1 179 0 discriminator 3
 725 00a6 274A     		ldr	r2, .L30+4
 726 00a8 1288     		ldrh	r2, [r2]
 727 00aa 2749     		ldr	r1, .L30+8
 728 00ac 1201     		lsls	r2, r2, #4
 729 00ae 0A44     		add	r2, r2, r1
 730 00b0 0632     		adds	r2, r2, #6
 731 00b2 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 170:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].id,
 732              		.loc 1 170 0 discriminator 3
 733 00b4 1046     		mov	r0, r2
 180:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].data[7]);
 734              		.loc 1 180 0 discriminator 3
 735 00b6 234A     		ldr	r2, .L30+4
 736 00b8 1288     		ldrh	r2, [r2]
 737 00ba 2349     		ldr	r1, .L30+8
 738 00bc 1201     		lsls	r2, r2, #4
 739 00be 0A44     		add	r2, r2, r1
 740 00c0 0732     		adds	r2, r2, #7
 741 00c2 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 170:sd_manager.c  **** 			(unsigned)sd_queue[sd_head].id,
 742              		.loc 1 170 0 discriminator 3
 743 00c4 1146     		mov	r1, r2
 744 00c6 3A1D     		adds	r2, r7, #4
 745 00c8 CDF80080 		str	r8, [sp]
 746 00cc CDF804C0 		str	ip, [sp, #4]
 747 00d0 CDF808E0 		str	lr, [sp, #8]
 748 00d4 0396     		str	r6, [sp, #12]
 749 00d6 0495     		str	r5, [sp, #16]
 750 00d8 0594     		str	r4, [sp, #20]
 751 00da 0690     		str	r0, [sp, #24]
 752 00dc 0791     		str	r1, [sp, #28]
 753 00de 1046     		mov	r0, r2
 754 00e0 1B49     		ldr	r1, .L30+16
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 18


 755 00e2 4A46     		mov	r2, r9
 756 00e4 FFF7FEFF 		bl	sprintf
 757 00e8 0346     		mov	r3, r0
 758 00ea A7F84630 		strh	r3, [r7, #70]	@ movhi
 181:sd_manager.c  **** 
 182:sd_manager.c  **** 		FS_Write(pfile, buffer, length); // write to SD
 759              		.loc 1 182 0 discriminator 3
 760 00ee 194B     		ldr	r3, .L30+20
 761 00f0 1968     		ldr	r1, [r3]
 762 00f2 B7F94630 		ldrsh	r3, [r7, #70]
 763 00f6 3A1D     		adds	r2, r7, #4
 764 00f8 0846     		mov	r0, r1
 765 00fa 1146     		mov	r1, r2
 766 00fc 1A46     		mov	r2, r3
 767 00fe FFF7FEFF 		bl	FS_Write
 169:sd_manager.c  **** 		length = sprintf(buffer, "%03X,%u,%02X,%02X,%02X,%02X,%02X,%02X,%02X,%02X\n",
 768              		.loc 1 169 0 discriminator 3
 769 0102 104B     		ldr	r3, .L30+4
 770 0104 1B88     		ldrh	r3, [r3]
 771 0106 0133     		adds	r3, r3, #1
 772 0108 9AB2     		uxth	r2, r3
 773 010a 0E4B     		ldr	r3, .L30+4
 774 010c 1A80     		strh	r2, [r3]	@ movhi
 775              	.L28:
 169:sd_manager.c  **** 		length = sprintf(buffer, "%03X,%u,%02X,%02X,%02X,%02X,%02X,%02X,%02X,%02X\n",
 776              		.loc 1 169 0 is_stmt 0 discriminator 1
 777 010e 0D4B     		ldr	r3, .L30+4
 778 0110 1A88     		ldrh	r2, [r3]
 779 0112 114B     		ldr	r3, .L30+24
 780 0114 1B88     		ldrh	r3, [r3]
 781 0116 9A42     		cmp	r2, r3
 782 0118 87D3     		bcc	.L29
 183:sd_manager.c  **** 	}
 184:sd_manager.c  **** 	FS_Sync(""); // sync to SD
 783              		.loc 1 184 0 is_stmt 1
 784 011a 1048     		ldr	r0, .L30+28
 785 011c FFF7FEFF 		bl	FS_Sync
 185:sd_manager.c  **** 	sd_head=0; sd_tail=0;
 786              		.loc 1 185 0
 787 0120 084B     		ldr	r3, .L30+4
 788 0122 0022     		movs	r2, #0
 789 0124 1A80     		strh	r2, [r3]	@ movhi
 790 0126 0C4B     		ldr	r3, .L30+24
 791 0128 0022     		movs	r2, #0
 792 012a 1A80     		strh	r2, [r3]	@ movhi
 186:sd_manager.c  ****     CyExitCriticalSection(atomic_state);               // END ATOMIC
 793              		.loc 1 186 0
 794 012c 97F84530 		ldrb	r3, [r7, #69]	@ zero_extendqisi2
 795 0130 1846     		mov	r0, r3
 796 0132 FFF7FEFF 		bl	CyExitCriticalSection
 797              	.L25:
 187:sd_manager.c  **** } // sd_write()
 798              		.loc 1 187 0
 799 0136 4C37     		adds	r7, r7, #76
 800              		.cfi_def_cfa_offset 28
 801 0138 BD46     		mov	sp, r7
 802              		.cfi_def_cfa_register 13
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 19


 803              		@ sp needed
 804 013a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 805              	.L31:
 806 013e 00BF     		.align	2
 807              	.L30:
 808 0140 00000000 		.word	sd_ok
 809 0144 00000000 		.word	sd_head
 810 0148 00000000 		.word	sd_queue
 811 014c 002E9302 		.word	43200000
 812 0150 78000000 		.word	.LC7
 813 0154 00000000 		.word	pfile
 814 0158 00000000 		.word	sd_tail
 815 015c 20000000 		.word	.LC1
 816              		.cfi_endproc
 817              	.LFE67:
 818              		.size	sd_write, .-sd_write
 819              		.section	.rodata
 820 00a9 000000   		.align	2
 821              	.LC8:
 822 00ac 66696C65 		.ascii	"filenamehere\000"
 822      6E616D65 
 822      68657265 
 822      00
 823              		.section	.text.sd_read,"ax",%progbits
 824              		.align	2
 825              		.global	sd_read
 826              		.thumb
 827              		.thumb_func
 828              		.type	sd_read, %function
 829              	sd_read:
 830              	.LFB68:
 188:sd_manager.c  **** 
 189:sd_manager.c  **** 
 190:sd_manager.c  **** void sd_read() {
 831              		.loc 1 190 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 64
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 835 0000 80B5     		push	{r7, lr}
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 7, -8
 838              		.cfi_offset 14, -4
 839 0002 90B0     		sub	sp, sp, #64
 840              		.cfi_def_cfa_offset 72
 841 0004 00AF     		add	r7, sp, #0
 842              		.cfi_def_cfa_register 7
 191:sd_manager.c  **** 	if((pfile = FS_FOpen("filenamehere", "r"))) {	//open file for reading
 843              		.loc 1 191 0
 844 0006 0D48     		ldr	r0, .L34
 845 0008 0D49     		ldr	r1, .L34+4
 846 000a FFF7FEFF 		bl	FS_FOpen
 847 000e 0246     		mov	r2, r0
 848 0010 0C4B     		ldr	r3, .L34+8
 849 0012 1A60     		str	r2, [r3]
 850 0014 0B4B     		ldr	r3, .L34+8
 851 0016 1B68     		ldr	r3, [r3]
 852 0018 002B     		cmp	r3, #0
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 20


 853 001a 0CD0     		beq	.L32
 854              	.LBB4:
 192:sd_manager.c  **** 		char buffer[64];
 193:sd_manager.c  **** 		//Time time;
 194:sd_manager.c  **** 		//DataPacket msg;
 195:sd_manager.c  **** 		FS_Read(pfile, buffer, 64); // read entire file
 855              		.loc 1 195 0
 856 001c 094B     		ldr	r3, .L34+8
 857 001e 1A68     		ldr	r2, [r3]
 858 0020 3B46     		mov	r3, r7
 859 0022 1046     		mov	r0, r2
 860 0024 1946     		mov	r1, r3
 861 0026 4022     		movs	r2, #64
 862 0028 FFF7FEFF 		bl	FS_Read
 196:sd_manager.c  **** 		FS_FClose(pfile);
 863              		.loc 1 196 0
 864 002c 054B     		ldr	r3, .L34+8
 865 002e 1B68     		ldr	r3, [r3]
 866 0030 1846     		mov	r0, r3
 867 0032 FFF7FEFF 		bl	FS_FClose
 868              	.L32:
 869              	.LBE4:
 197:sd_manager.c  **** 	}
 198:sd_manager.c  **** }
 870              		.loc 1 198 0
 871 0036 4037     		adds	r7, r7, #64
 872              		.cfi_def_cfa_offset 8
 873 0038 BD46     		mov	sp, r7
 874              		.cfi_def_cfa_register 13
 875              		@ sp needed
 876 003a 80BD     		pop	{r7, pc}
 877              	.L35:
 878              		.align	2
 879              	.L34:
 880 003c AC000000 		.word	.LC8
 881 0040 1C000000 		.word	.LC0
 882 0044 00000000 		.word	pfile
 883              		.cfi_endproc
 884              	.LFE68:
 885              		.size	sd_read, .-sd_read
 886              		.section	.text.sd_buffer,"ax",%progbits
 887              		.align	2
 888              		.global	sd_buffer
 889              		.thumb
 890              		.thumb_func
 891              		.type	sd_buffer, %function
 892              	sd_buffer:
 893              	.LFB69:
 199:sd_manager.c  **** 
 200:sd_manager.c  **** 
 201:sd_manager.c  **** void sd_buffer(DataPacket * msg) {
 894              		.loc 1 201 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 8
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899 0000 90B4     		push	{r4, r7}
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 21


 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 4, -8
 902              		.cfi_offset 7, -4
 903 0002 82B0     		sub	sp, sp, #8
 904              		.cfi_def_cfa_offset 16
 905 0004 00AF     		add	r7, sp, #0
 906              		.cfi_def_cfa_register 7
 907 0006 7860     		str	r0, [r7, #4]
 202:sd_manager.c  **** 	sd_queue[sd_tail] = *msg;
 908              		.loc 1 202 0
 909 0008 0F4B     		ldr	r3, .L39
 910 000a 1B88     		ldrh	r3, [r3]
 911 000c 0F4A     		ldr	r2, .L39+4
 912 000e 1B01     		lsls	r3, r3, #4
 913 0010 1A44     		add	r2, r2, r3
 914 0012 7B68     		ldr	r3, [r7, #4]
 915 0014 1446     		mov	r4, r2
 916 0016 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 917 0018 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 203:sd_manager.c  **** 	if (sd_tail == SD_QUEUE_LENGTH-1)	//if buffer full stay at tail
 918              		.loc 1 203 0
 919 001c 0A4B     		ldr	r3, .L39
 920 001e 1B88     		ldrh	r3, [r3]
 921 0020 40F2FF32 		movw	r2, #1023
 922 0024 9342     		cmp	r3, r2
 923 0026 04D1     		bne	.L37
 204:sd_manager.c  **** 		sd_tail = sd_tail;
 924              		.loc 1 204 0
 925 0028 074B     		ldr	r3, .L39
 926 002a 1A88     		ldrh	r2, [r3]
 927 002c 064B     		ldr	r3, .L39
 928 002e 1A80     		strh	r2, [r3]	@ movhi
 929 0030 05E0     		b	.L36
 930              	.L37:
 205:sd_manager.c  **** 	else
 206:sd_manager.c  **** 		sd_tail++;	
 931              		.loc 1 206 0
 932 0032 054B     		ldr	r3, .L39
 933 0034 1B88     		ldrh	r3, [r3]
 934 0036 0133     		adds	r3, r3, #1
 935 0038 9AB2     		uxth	r2, r3
 936 003a 034B     		ldr	r3, .L39
 937 003c 1A80     		strh	r2, [r3]	@ movhi
 938              	.L36:
 207:sd_manager.c  **** }
 939              		.loc 1 207 0
 940 003e 0837     		adds	r7, r7, #8
 941              		.cfi_def_cfa_offset 8
 942 0040 BD46     		mov	sp, r7
 943              		.cfi_def_cfa_register 13
 944              		@ sp needed
 945 0042 90BC     		pop	{r4, r7}
 946              		.cfi_restore 7
 947              		.cfi_restore 4
 948              		.cfi_def_cfa_offset 0
 949 0044 7047     		bx	lr
 950              	.L40:
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 22


 951 0046 00BF     		.align	2
 952              	.L39:
 953 0048 00000000 		.word	sd_tail
 954 004c 00000000 		.word	sd_queue
 955              		.cfi_endproc
 956              	.LFE69:
 957              		.size	sd_buffer, .-sd_buffer
 958              		.section	.text.sd_stop,"ax",%progbits
 959              		.align	2
 960              		.global	sd_stop
 961              		.thumb
 962              		.thumb_func
 963              		.type	sd_stop, %function
 964              	sd_stop:
 965              	.LFB70:
 208:sd_manager.c  **** 
 209:sd_manager.c  **** /* sd_stop()
 210:sd_manager.c  **** 	Takes and returns nothing.
 211:sd_manager.c  **** 	Closes the file, synchronizes, and unmounts SD card to prevent corruption.
 212:sd_manager.c  **** */
 213:sd_manager.c  **** void sd_stop(void) {
 966              		.loc 1 213 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 1, uses_anonymous_args = 0
 970 0000 80B5     		push	{r7, lr}
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 7, -8
 973              		.cfi_offset 14, -4
 974 0002 00AF     		add	r7, sp, #0
 975              		.cfi_def_cfa_register 7
 214:sd_manager.c  **** 	sd_write();
 976              		.loc 1 214 0
 977 0004 FFF7FEFF 		bl	sd_write
 215:sd_manager.c  **** 	FS_FClose(pfile);
 978              		.loc 1 215 0
 979 0008 054B     		ldr	r3, .L42
 980 000a 1B68     		ldr	r3, [r3]
 981 000c 1846     		mov	r0, r3
 982 000e FFF7FEFF 		bl	FS_FClose
 216:sd_manager.c  **** 	FS_Sync("");
 983              		.loc 1 216 0
 984 0012 0448     		ldr	r0, .L42+4
 985 0014 FFF7FEFF 		bl	FS_Sync
 217:sd_manager.c  **** 	FS_Unmount("");
 986              		.loc 1 217 0
 987 0018 0248     		ldr	r0, .L42+4
 988 001a FFF7FEFF 		bl	FS_Unmount
 218:sd_manager.c  **** } // sd_stop()
 989              		.loc 1 218 0
 990 001e 80BD     		pop	{r7, pc}
 991              	.L43:
 992              		.align	2
 993              	.L42:
 994 0020 00000000 		.word	pfile
 995 0024 20000000 		.word	.LC1
 996              		.cfi_endproc
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 23


 997              	.LFE70:
 998              		.size	sd_stop, .-sd_stop
 999              		.section	.rodata
 1000 00b9 000000   		.align	2
 1001              	.LC9:
 1002 00bc 54797065 		.ascii	"Type,Time,Value,ID\012\000"
 1002      2C54696D 
 1002      652C5661 
 1002      6C75652C 
 1002      49440A00 
 1003              		.align	2
 1004              	.LC10:
 1005 00d0 25752C25 		.ascii	"%u,%u,%llu,%u\012\000"
 1005      752C256C 
 1005      6C752C25 
 1005      750A00
 1006 00df 00       		.section	.text.sd_writetest,"ax",%progbits
 1007              		.align	2
 1008              		.global	sd_writetest
 1009              		.thumb
 1010              		.thumb_func
 1011              		.type	sd_writetest, %function
 1012              	sd_writetest:
 1013              	.LFB71:
 219:sd_manager.c  **** 
 220:sd_manager.c  **** 
 221:sd_manager.c  **** void sd_writetest() {
 1014              		.loc 1 221 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 136
 1017              		@ frame_needed = 1, uses_anonymous_args = 0
 1018 0000 80B5     		push	{r7, lr}
 1019              		.cfi_def_cfa_offset 8
 1020              		.cfi_offset 7, -8
 1021              		.cfi_offset 14, -4
 1022 0002 A6B0     		sub	sp, sp, #152
 1023              		.cfi_def_cfa_offset 160
 1024 0004 04AF     		add	r7, sp, #16
 1025              		.cfi_def_cfa 7, 144
 222:sd_manager.c  **** 	// test data writing
 223:sd_manager.c  **** 	char buffer[128];
 224:sd_manager.c  **** 	short length = 0;
 1026              		.loc 1 224 0
 1027 0006 0023     		movs	r3, #0
 1028 0008 A7F88630 		strh	r3, [r7, #134]	@ movhi
 225:sd_manager.c  **** 
 226:sd_manager.c  **** 	// test write
 227:sd_manager.c  **** 	FS_Write(pfile, "Type,Time,Value,ID\n", 19);
 1029              		.loc 1 227 0
 1030 000c 164B     		ldr	r3, .L45
 1031 000e 1B68     		ldr	r3, [r3]
 1032 0010 1846     		mov	r0, r3
 1033 0012 1649     		ldr	r1, .L45+4
 1034 0014 1322     		movs	r2, #19
 1035 0016 FFF7FEFF 		bl	FS_Write
 228:sd_manager.c  **** 	length = sprintf(buffer, "%u,%u,%llu,%u\n",
 1036              		.loc 1 228 0
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 24


 1037 001a 391D     		adds	r1, r7, #4
 1038 001c 4FF0FF32 		mov	r2, #-1
 1039 0020 4FF0FF33 		mov	r3, #-1
 1040 0024 CDE90023 		strd	r2, [sp]
 1041 0028 40F20523 		movw	r3, #517
 1042 002c 0293     		str	r3, [sp, #8]
 1043 002e 0846     		mov	r0, r1
 1044 0030 0F49     		ldr	r1, .L45+8
 1045 0032 0122     		movs	r2, #1
 1046 0034 4FF0FF33 		mov	r3, #-1
 1047 0038 FFF7FEFF 		bl	sprintf
 1048 003c 0346     		mov	r3, r0
 1049 003e A7F88630 		strh	r3, [r7, #134]	@ movhi
 229:sd_manager.c  **** 		1,0xFFFFFFFF, 0xFFFFFFFFFFFFFFFF, 517);
 230:sd_manager.c  **** 	FS_Write(pfile, buffer, length);
 1050              		.loc 1 230 0
 1051 0042 094B     		ldr	r3, .L45
 1052 0044 1968     		ldr	r1, [r3]
 1053 0046 B7F98630 		ldrsh	r3, [r7, #134]
 1054 004a 3A1D     		adds	r2, r7, #4
 1055 004c 0846     		mov	r0, r1
 1056 004e 1146     		mov	r1, r2
 1057 0050 1A46     		mov	r2, r3
 1058 0052 FFF7FEFF 		bl	FS_Write
 231:sd_manager.c  **** 
 232:sd_manager.c  **** 	sd_stop(); // for testing
 1059              		.loc 1 232 0
 1060 0056 FFF7FEFF 		bl	sd_stop
 233:sd_manager.c  **** 	sd_ok = 0; // for testing
 1061              		.loc 1 233 0
 1062 005a 064B     		ldr	r3, .L45+12
 1063 005c 0022     		movs	r2, #0
 1064 005e 1A70     		strb	r2, [r3]
 234:sd_manager.c  **** }//test_push
 1065              		.loc 1 234 0
 1066 0060 8837     		adds	r7, r7, #136
 1067              		.cfi_def_cfa_offset 8
 1068 0062 BD46     		mov	sp, r7
 1069              		.cfi_def_cfa_register 13
 1070              		@ sp needed
 1071 0064 80BD     		pop	{r7, pc}
 1072              	.L46:
 1073 0066 00BF     		.align	2
 1074              	.L45:
 1075 0068 00000000 		.word	pfile
 1076 006c BC000000 		.word	.LC9
 1077 0070 D0000000 		.word	.LC10
 1078 0074 00000000 		.word	sd_ok
 1079              		.cfi_endproc
 1080              	.LFE71:
 1081              		.size	sd_writetest, .-sd_writetest
 1082              		.text
 1083              	.Letext0:
 1084              		.file 2 "d:\\programming\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm-n
 1085              		.file 3 "d:\\programming\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.3\\arm-n
 1086              		.file 4 ".\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 1087              		.file 5 ".\\emFile_V322c\\Code\\Include\\PSoC5/FS.h"
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 25


 1088              		.file 6 "data.h"
 1089              		.file 7 "time_manager.h"
 1090              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 1091              		.section	.debug_info,"",%progbits
 1092              	.Ldebug_info0:
 1093 0000 F5040000 		.4byte	0x4f5
 1094 0004 0400     		.2byte	0x4
 1095 0006 00000000 		.4byte	.Ldebug_abbrev0
 1096 000a 04       		.byte	0x4
 1097 000b 01       		.uleb128 0x1
 1098 000c F5010000 		.4byte	.LASF66
 1099 0010 01       		.byte	0x1
 1100 0011 DA020000 		.4byte	.LASF67
 1101 0015 96020000 		.4byte	.LASF68
 1102 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1103 001d 00000000 		.4byte	0
 1104 0021 00000000 		.4byte	.Ldebug_line0
 1105 0025 02       		.uleb128 0x2
 1106 0026 01       		.byte	0x1
 1107 0027 06       		.byte	0x6
 1108 0028 56010000 		.4byte	.LASF0
 1109 002c 03       		.uleb128 0x3
 1110 002d 1B010000 		.4byte	.LASF3
 1111 0031 02       		.byte	0x2
 1112 0032 1D       		.byte	0x1d
 1113 0033 37000000 		.4byte	0x37
 1114 0037 02       		.uleb128 0x2
 1115 0038 01       		.byte	0x1
 1116 0039 08       		.byte	0x8
 1117 003a 36010000 		.4byte	.LASF1
 1118 003e 02       		.uleb128 0x2
 1119 003f 02       		.byte	0x2
 1120 0040 05       		.byte	0x5
 1121 0041 3A000000 		.4byte	.LASF2
 1122 0045 03       		.uleb128 0x3
 1123 0046 81000000 		.4byte	.LASF4
 1124 004a 02       		.byte	0x2
 1125 004b 2B       		.byte	0x2b
 1126 004c 50000000 		.4byte	0x50
 1127 0050 02       		.uleb128 0x2
 1128 0051 02       		.byte	0x2
 1129 0052 07       		.byte	0x7
 1130 0053 B6010000 		.4byte	.LASF5
 1131 0057 03       		.uleb128 0x3
 1132 0058 0A030000 		.4byte	.LASF6
 1133 005c 02       		.byte	0x2
 1134 005d 3F       		.byte	0x3f
 1135 005e 62000000 		.4byte	0x62
 1136 0062 02       		.uleb128 0x2
 1137 0063 04       		.byte	0x4
 1138 0064 05       		.byte	0x5
 1139 0065 D3010000 		.4byte	.LASF7
 1140 0069 03       		.uleb128 0x3
 1141 006a 6E000000 		.4byte	.LASF8
 1142 006e 02       		.byte	0x2
 1143 006f 41       		.byte	0x41
 1144 0070 74000000 		.4byte	0x74
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 26


 1145 0074 02       		.uleb128 0x2
 1146 0075 04       		.byte	0x4
 1147 0076 07       		.byte	0x7
 1148 0077 9F010000 		.4byte	.LASF9
 1149 007b 02       		.uleb128 0x2
 1150 007c 08       		.byte	0x8
 1151 007d 05       		.byte	0x5
 1152 007e F4000000 		.4byte	.LASF10
 1153 0082 02       		.uleb128 0x2
 1154 0083 08       		.byte	0x8
 1155 0084 07       		.byte	0x7
 1156 0085 69010000 		.4byte	.LASF11
 1157 0089 04       		.uleb128 0x4
 1158 008a 04       		.byte	0x4
 1159 008b 05       		.byte	0x5
 1160 008c 696E7400 		.ascii	"int\000"
 1161 0090 02       		.uleb128 0x2
 1162 0091 04       		.byte	0x4
 1163 0092 07       		.byte	0x7
 1164 0093 89010000 		.4byte	.LASF12
 1165 0097 03       		.uleb128 0x3
 1166 0098 AE000000 		.4byte	.LASF13
 1167 009c 03       		.byte	0x3
 1168 009d 15       		.byte	0x15
 1169 009e 2C000000 		.4byte	0x2c
 1170 00a2 03       		.uleb128 0x3
 1171 00a3 96010000 		.4byte	.LASF14
 1172 00a7 03       		.byte	0x3
 1173 00a8 21       		.byte	0x21
 1174 00a9 45000000 		.4byte	0x45
 1175 00ad 03       		.uleb128 0x3
 1176 00ae DC010000 		.4byte	.LASF15
 1177 00b2 03       		.byte	0x3
 1178 00b3 2C       		.byte	0x2c
 1179 00b4 57000000 		.4byte	0x57
 1180 00b8 03       		.uleb128 0x3
 1181 00b9 80010000 		.4byte	.LASF16
 1182 00bd 03       		.byte	0x3
 1183 00be 2D       		.byte	0x2d
 1184 00bf 69000000 		.4byte	0x69
 1185 00c3 02       		.uleb128 0x2
 1186 00c4 04       		.byte	0x4
 1187 00c5 04       		.byte	0x4
 1188 00c6 DC000000 		.4byte	.LASF17
 1189 00ca 02       		.uleb128 0x2
 1190 00cb 08       		.byte	0x8
 1191 00cc 04       		.byte	0x4
 1192 00cd EF020000 		.4byte	.LASF18
 1193 00d1 02       		.uleb128 0x2
 1194 00d2 01       		.byte	0x1
 1195 00d3 08       		.byte	0x8
 1196 00d4 CE010000 		.4byte	.LASF19
 1197 00d8 02       		.uleb128 0x2
 1198 00d9 04       		.byte	0x4
 1199 00da 07       		.byte	0x7
 1200 00db 29030000 		.4byte	.LASF20
 1201 00df 05       		.uleb128 0x5
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 27


 1202 00e0 04       		.byte	0x4
 1203 00e1 D1000000 		.4byte	0xd1
 1204 00e5 03       		.uleb128 0x3
 1205 00e6 4E010000 		.4byte	.LASF21
 1206 00ea 04       		.byte	0x4
 1207 00eb 7E       		.byte	0x7e
 1208 00ec F0000000 		.4byte	0xf0
 1209 00f0 06       		.uleb128 0x6
 1210 00f1 4E010000 		.4byte	.LASF21
 1211 00f5 07       		.uleb128 0x7
 1212 00f6 0C       		.byte	0xc
 1213 00f7 05       		.byte	0x5
 1214 00f8 FD       		.byte	0xfd
 1215 00f9 4A010000 		.4byte	0x14a
 1216 00fd 08       		.uleb128 0x8
 1217 00fe 16010000 		.4byte	.LASF22
 1218 0102 05       		.byte	0x5
 1219 0103 FE       		.byte	0xfe
 1220 0104 50000000 		.4byte	0x50
 1221 0108 00       		.byte	0
 1222 0109 08       		.uleb128 0x8
 1223 010a 54030000 		.4byte	.LASF23
 1224 010e 05       		.byte	0x5
 1225 010f FF       		.byte	0xff
 1226 0110 50000000 		.4byte	0x50
 1227 0114 02       		.byte	0x2
 1228 0115 09       		.uleb128 0x9
 1229 0116 44617900 		.ascii	"Day\000"
 1230 011a 05       		.byte	0x5
 1231 011b 0001     		.2byte	0x100
 1232 011d 50000000 		.4byte	0x50
 1233 0121 04       		.byte	0x4
 1234 0122 0A       		.uleb128 0xa
 1235 0123 C9010000 		.4byte	.LASF24
 1236 0127 05       		.byte	0x5
 1237 0128 0101     		.2byte	0x101
 1238 012a 50000000 		.4byte	0x50
 1239 012e 06       		.byte	0x6
 1240 012f 0A       		.uleb128 0xa
 1241 0130 5A030000 		.4byte	.LASF25
 1242 0134 05       		.byte	0x5
 1243 0135 0201     		.2byte	0x102
 1244 0137 50000000 		.4byte	0x50
 1245 013b 08       		.byte	0x8
 1246 013c 0A       		.uleb128 0xa
 1247 013d D3020000 		.4byte	.LASF26
 1248 0141 05       		.byte	0x5
 1249 0142 0301     		.2byte	0x103
 1250 0144 50000000 		.4byte	0x50
 1251 0148 0A       		.byte	0xa
 1252 0149 00       		.byte	0
 1253 014a 0B       		.uleb128 0xb
 1254 014b 59000000 		.4byte	.LASF27
 1255 014f 05       		.byte	0x5
 1256 0150 0401     		.2byte	0x104
 1257 0152 F5000000 		.4byte	0xf5
 1258 0156 0C       		.uleb128 0xc
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 28


 1259 0157 01       		.byte	0x1
 1260 0158 05       		.byte	0x5
 1261 0159 0601     		.2byte	0x106
 1262 015b 72010000 		.4byte	0x172
 1263 015f 0D       		.uleb128 0xd
 1264 0160 E2000000 		.4byte	.LASF28
 1265 0164 00       		.sleb128 0
 1266 0165 0D       		.uleb128 0xd
 1267 0166 F6020000 		.4byte	.LASF29
 1268 016a 01       		.sleb128 1
 1269 016b 0D       		.uleb128 0xd
 1270 016c 08000000 		.4byte	.LASF30
 1271 0170 02       		.sleb128 2
 1272 0171 00       		.byte	0
 1273 0172 05       		.uleb128 0x5
 1274 0173 04       		.byte	0x4
 1275 0174 E5000000 		.4byte	0xe5
 1276 0178 07       		.uleb128 0x7
 1277 0179 10       		.byte	0x10
 1278 017a 06       		.byte	0x6
 1279 017b 0A       		.byte	0xa
 1280 017c B0010000 		.4byte	0x1b0
 1281 0180 08       		.uleb128 0x8
 1282 0181 A1000000 		.4byte	.LASF31
 1283 0185 06       		.byte	0x6
 1284 0186 0B       		.byte	0xb
 1285 0187 B8000000 		.4byte	0xb8
 1286 018b 00       		.byte	0
 1287 018c 0E       		.uleb128 0xe
 1288 018d 696400   		.ascii	"id\000"
 1289 0190 06       		.byte	0x6
 1290 0191 0C       		.byte	0xc
 1291 0192 A2000000 		.4byte	0xa2
 1292 0196 04       		.byte	0x4
 1293 0197 08       		.uleb128 0x8
 1294 0198 2F010000 		.4byte	.LASF32
 1295 019c 06       		.byte	0x6
 1296 019d 0D       		.byte	0xd
 1297 019e 97000000 		.4byte	0x97
 1298 01a2 06       		.byte	0x6
 1299 01a3 08       		.uleb128 0x8
 1300 01a4 83020000 		.4byte	.LASF33
 1301 01a8 06       		.byte	0x6
 1302 01a9 0E       		.byte	0xe
 1303 01aa B0010000 		.4byte	0x1b0
 1304 01ae 07       		.byte	0x7
 1305 01af 00       		.byte	0
 1306 01b0 0F       		.uleb128 0xf
 1307 01b1 97000000 		.4byte	0x97
 1308 01b5 C0010000 		.4byte	0x1c0
 1309 01b9 10       		.uleb128 0x10
 1310 01ba D8000000 		.4byte	0xd8
 1311 01be 07       		.byte	0x7
 1312 01bf 00       		.byte	0
 1313 01c0 03       		.uleb128 0x3
 1314 01c1 EA010000 		.4byte	.LASF34
 1315 01c5 06       		.byte	0x6
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 29


 1316 01c6 0F       		.byte	0xf
 1317 01c7 78010000 		.4byte	0x178
 1318 01cb 07       		.uleb128 0x7
 1319 01cc 10       		.byte	0x10
 1320 01cd 07       		.byte	0x7
 1321 01ce 12       		.byte	0x12
 1322 01cf 28020000 		.4byte	0x228
 1323 01d3 08       		.uleb128 0x8
 1324 01d4 E4010000 		.4byte	.LASF35
 1325 01d8 07       		.byte	0x7
 1326 01d9 13       		.byte	0x13
 1327 01da 97000000 		.4byte	0x97
 1328 01de 00       		.byte	0
 1329 01df 0E       		.uleb128 0xe
 1330 01e0 64617900 		.ascii	"day\000"
 1331 01e4 07       		.byte	0x7
 1332 01e5 13       		.byte	0x13
 1333 01e6 97000000 		.4byte	0x97
 1334 01ea 01       		.byte	0x1
 1335 01eb 08       		.uleb128 0x8
 1336 01ec 2A010000 		.4byte	.LASF36
 1337 01f0 07       		.byte	0x7
 1338 01f1 13       		.byte	0x13
 1339 01f2 97000000 		.4byte	0x97
 1340 01f6 02       		.byte	0x2
 1341 01f7 08       		.uleb128 0x8
 1342 01f8 8F020000 		.4byte	.LASF37
 1343 01fc 07       		.byte	0x7
 1344 01fd 13       		.byte	0x13
 1345 01fe 97000000 		.4byte	0x97
 1346 0202 03       		.byte	0x3
 1347 0203 08       		.uleb128 0x8
 1348 0204 62010000 		.4byte	.LASF38
 1349 0208 07       		.byte	0x7
 1350 0209 13       		.byte	0x13
 1351 020a 97000000 		.4byte	0x97
 1352 020e 04       		.byte	0x4
 1353 020f 08       		.uleb128 0x8
 1354 0210 A1000000 		.4byte	.LASF31
 1355 0214 07       		.byte	0x7
 1356 0215 14       		.byte	0x14
 1357 0216 B8000000 		.4byte	0xb8
 1358 021a 08       		.byte	0x8
 1359 021b 08       		.uleb128 0x8
 1360 021c 9C000000 		.4byte	.LASF39
 1361 0220 07       		.byte	0x7
 1362 0221 15       		.byte	0x15
 1363 0222 A2000000 		.4byte	0xa2
 1364 0226 0C       		.byte	0xc
 1365 0227 00       		.byte	0
 1366 0228 03       		.uleb128 0x3
 1367 0229 25010000 		.4byte	.LASF40
 1368 022d 07       		.byte	0x7
 1369 022e 16       		.byte	0x16
 1370 022f CB010000 		.4byte	0x1cb
 1371 0233 11       		.uleb128 0x11
 1372 0234 8C000000 		.4byte	.LASF41
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 30


 1373 0238 01       		.byte	0x1
 1374 0239 0E       		.byte	0xe
 1375 023a 00000000 		.4byte	.LFB63
 1376 023e 1C000000 		.4byte	.LFE63-.LFB63
 1377 0242 01       		.uleb128 0x1
 1378 0243 9C       		.byte	0x9c
 1379 0244 11       		.uleb128 0x11
 1380 0245 3A030000 		.4byte	.LASF42
 1381 0249 01       		.byte	0x1
 1382 024a 17       		.byte	0x17
 1383 024b 00000000 		.4byte	.LFB64
 1384 024f 0A000000 		.4byte	.LFE64-.LFB64
 1385 0253 01       		.uleb128 0x1
 1386 0254 9C       		.byte	0x9c
 1387 0255 12       		.uleb128 0x12
 1388 0256 00000000 		.4byte	.LASF47
 1389 025a 01       		.byte	0x1
 1390 025b 27       		.byte	0x27
 1391 025c 00000000 		.4byte	.LFB65
 1392 0260 A8010000 		.4byte	.LFE65-.LFB65
 1393 0264 01       		.uleb128 0x1
 1394 0265 9C       		.byte	0x9c
 1395 0266 BF020000 		.4byte	0x2bf
 1396 026a 13       		.uleb128 0x13
 1397 026b B1010000 		.4byte	.LASF49
 1398 026f 01       		.byte	0x1
 1399 0270 27       		.byte	0x27
 1400 0271 28020000 		.4byte	0x228
 1401 0275 03       		.uleb128 0x3
 1402 0276 91       		.byte	0x91
 1403 0277 E87E     		.sleb128 -152
 1404 0279 14       		.uleb128 0x14
 1405 027a 1A000000 		.4byte	.LASF43
 1406 027e 01       		.byte	0x1
 1407 027f 34       		.byte	0x34
 1408 0280 BF020000 		.4byte	0x2bf
 1409 0284 02       		.uleb128 0x2
 1410 0285 91       		.byte	0x91
 1411 0286 48       		.sleb128 -56
 1412 0287 14       		.uleb128 0x14
 1413 0288 50000000 		.4byte	.LASF44
 1414 028c 01       		.byte	0x1
 1415 028d 34       		.byte	0x34
 1416 028e CF020000 		.4byte	0x2cf
 1417 0292 03       		.uleb128 0x3
 1418 0293 91       		.byte	0x91
 1419 0294 887F     		.sleb128 -120
 1420 0296 15       		.uleb128 0x15
 1421 0297 3E000000 		.4byte	.LBB2
 1422 029b 30010000 		.4byte	.LBE2-.LBB2
 1423 029f 14       		.uleb128 0x14
 1424 02a0 44010000 		.4byte	.LASF45
 1425 02a4 01       		.byte	0x1
 1426 02a5 58       		.byte	0x58
 1427 02a6 4A010000 		.4byte	0x14a
 1428 02aa 03       		.uleb128 0x3
 1429 02ab 91       		.byte	0x91
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 31


 1430 02ac FC7E     		.sleb128 -132
 1431 02ae 14       		.uleb128 0x14
 1432 02af B6000000 		.4byte	.LASF46
 1433 02b3 01       		.byte	0x1
 1434 02b4 59       		.byte	0x59
 1435 02b5 74000000 		.4byte	0x74
 1436 02b9 03       		.uleb128 0x3
 1437 02ba 91       		.byte	0x91
 1438 02bb F87E     		.sleb128 -136
 1439 02bd 00       		.byte	0
 1440 02be 00       		.byte	0
 1441 02bf 0F       		.uleb128 0xf
 1442 02c0 D1000000 		.4byte	0xd1
 1443 02c4 CF020000 		.4byte	0x2cf
 1444 02c8 10       		.uleb128 0x10
 1445 02c9 D8000000 		.4byte	0xd8
 1446 02cd 1F       		.byte	0x1f
 1447 02ce 00       		.byte	0
 1448 02cf 0F       		.uleb128 0xf
 1449 02d0 D1000000 		.4byte	0xd1
 1450 02d4 DF020000 		.4byte	0x2df
 1451 02d8 10       		.uleb128 0x10
 1452 02d9 D8000000 		.4byte	0xd8
 1453 02dd 3F       		.byte	0x3f
 1454 02de 00       		.byte	0
 1455 02df 12       		.uleb128 0x12
 1456 02e0 02010000 		.4byte	.LASF48
 1457 02e4 01       		.byte	0x1
 1458 02e5 74       		.byte	0x74
 1459 02e6 00000000 		.4byte	.LFB66
 1460 02ea 90010000 		.4byte	.LFE66-.LFB66
 1461 02ee 01       		.uleb128 0x1
 1462 02ef 9C       		.byte	0x9c
 1463 02f0 47030000 		.4byte	0x347
 1464 02f4 13       		.uleb128 0x13
 1465 02f5 B1010000 		.4byte	.LASF49
 1466 02f9 01       		.byte	0x1
 1467 02fa 74       		.byte	0x74
 1468 02fb 28020000 		.4byte	0x228
 1469 02ff 03       		.uleb128 0x3
 1470 0300 91       		.byte	0x91
 1471 0301 887F     		.sleb128 -120
 1472 0303 15       		.uleb128 0x15
 1473 0304 24000000 		.4byte	.LBB3
 1474 0308 52010000 		.4byte	.LBE3-.LBB3
 1475 030c 14       		.uleb128 0x14
 1476 030d 88020000 		.4byte	.LASF50
 1477 0311 01       		.byte	0x1
 1478 0312 76       		.byte	0x76
 1479 0313 CF020000 		.4byte	0x2cf
 1480 0317 03       		.uleb128 0x3
 1481 0318 91       		.byte	0x91
 1482 0319 987F     		.sleb128 -104
 1483 031b 16       		.uleb128 0x16
 1484 031c 70747200 		.ascii	"ptr\000"
 1485 0320 01       		.byte	0x1
 1486 0321 77       		.byte	0x77
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 32


 1487 0322 DF000000 		.4byte	0xdf
 1488 0326 02       		.uleb128 0x2
 1489 0327 91       		.byte	0x91
 1490 0328 6C       		.sleb128 -20
 1491 0329 16       		.uleb128 0x16
 1492 032a 6E756D00 		.ascii	"num\000"
 1493 032e 01       		.byte	0x1
 1494 032f 78       		.byte	0x78
 1495 0330 A2000000 		.4byte	0xa2
 1496 0334 02       		.uleb128 0x2
 1497 0335 91       		.byte	0x91
 1498 0336 6A       		.sleb128 -22
 1499 0337 14       		.uleb128 0x14
 1500 0338 65000000 		.4byte	.LASF51
 1501 033c 01       		.byte	0x1
 1502 033d 79       		.byte	0x79
 1503 033e 28020000 		.4byte	0x228
 1504 0342 02       		.uleb128 0x2
 1505 0343 91       		.byte	0x91
 1506 0344 58       		.sleb128 -40
 1507 0345 00       		.byte	0
 1508 0346 00       		.byte	0
 1509 0347 17       		.uleb128 0x17
 1510 0348 D3000000 		.4byte	.LASF53
 1511 034c 01       		.byte	0x1
 1512 034d A2       		.byte	0xa2
 1513 034e 00000000 		.4byte	.LFB67
 1514 0352 60010000 		.4byte	.LFE67-.LFB67
 1515 0356 01       		.uleb128 0x1
 1516 0357 9C       		.byte	0x9c
 1517 0358 88030000 		.4byte	0x388
 1518 035c 14       		.uleb128 0x14
 1519 035d 88020000 		.4byte	.LASF50
 1520 0361 01       		.byte	0x1
 1521 0362 A5       		.byte	0xa5
 1522 0363 CF020000 		.4byte	0x2cf
 1523 0367 03       		.uleb128 0x3
 1524 0368 91       		.byte	0x91
 1525 0369 9C7F     		.sleb128 -100
 1526 036b 14       		.uleb128 0x14
 1527 036c 2F010000 		.4byte	.LASF32
 1528 0370 01       		.byte	0x1
 1529 0371 A6       		.byte	0xa6
 1530 0372 3E000000 		.4byte	0x3e
 1531 0376 02       		.uleb128 0x2
 1532 0377 91       		.byte	0x91
 1533 0378 5E       		.sleb128 -34
 1534 0379 14       		.uleb128 0x14
 1535 037a 2D000000 		.4byte	.LASF52
 1536 037e 01       		.byte	0x1
 1537 037f A8       		.byte	0xa8
 1538 0380 97000000 		.4byte	0x97
 1539 0384 02       		.uleb128 0x2
 1540 0385 91       		.byte	0x91
 1541 0386 5D       		.sleb128 -35
 1542 0387 00       		.byte	0
 1543 0388 17       		.uleb128 0x17
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 33


 1544 0389 79000000 		.4byte	.LASF54
 1545 038d 01       		.byte	0x1
 1546 038e BE       		.byte	0xbe
 1547 038f 00000000 		.4byte	.LFB68
 1548 0393 48000000 		.4byte	.LFE68-.LFB68
 1549 0397 01       		.uleb128 0x1
 1550 0398 9C       		.byte	0x9c
 1551 0399 B7030000 		.4byte	0x3b7
 1552 039d 15       		.uleb128 0x15
 1553 039e 1C000000 		.4byte	.LBB4
 1554 03a2 1A000000 		.4byte	.LBE4-.LBB4
 1555 03a6 14       		.uleb128 0x14
 1556 03a7 88020000 		.4byte	.LASF50
 1557 03ab 01       		.byte	0x1
 1558 03ac C0       		.byte	0xc0
 1559 03ad CF020000 		.4byte	0x2cf
 1560 03b1 03       		.uleb128 0x3
 1561 03b2 91       		.byte	0x91
 1562 03b3 B87F     		.sleb128 -72
 1563 03b5 00       		.byte	0
 1564 03b6 00       		.byte	0
 1565 03b7 18       		.uleb128 0x18
 1566 03b8 23000000 		.4byte	.LASF55
 1567 03bc 01       		.byte	0x1
 1568 03bd C9       		.byte	0xc9
 1569 03be 00000000 		.4byte	.LFB69
 1570 03c2 50000000 		.4byte	.LFE69-.LFB69
 1571 03c6 01       		.uleb128 0x1
 1572 03c7 9C       		.byte	0x9c
 1573 03c8 DB030000 		.4byte	0x3db
 1574 03cc 19       		.uleb128 0x19
 1575 03cd 6D736700 		.ascii	"msg\000"
 1576 03d1 01       		.byte	0x1
 1577 03d2 C9       		.byte	0xc9
 1578 03d3 DB030000 		.4byte	0x3db
 1579 03d7 02       		.uleb128 0x2
 1580 03d8 91       		.byte	0x91
 1581 03d9 74       		.sleb128 -12
 1582 03da 00       		.byte	0
 1583 03db 05       		.uleb128 0x5
 1584 03dc 04       		.byte	0x4
 1585 03dd C0010000 		.4byte	0x1c0
 1586 03e1 11       		.uleb128 0x11
 1587 03e2 32030000 		.4byte	.LASF56
 1588 03e6 01       		.byte	0x1
 1589 03e7 D5       		.byte	0xd5
 1590 03e8 00000000 		.4byte	.LFB70
 1591 03ec 28000000 		.4byte	.LFE70-.LFB70
 1592 03f0 01       		.uleb128 0x1
 1593 03f1 9C       		.byte	0x9c
 1594 03f2 17       		.uleb128 0x17
 1595 03f3 61030000 		.4byte	.LASF57
 1596 03f7 01       		.byte	0x1
 1597 03f8 DD       		.byte	0xdd
 1598 03f9 00000000 		.4byte	.LFB71
 1599 03fd 78000000 		.4byte	.LFE71-.LFB71
 1600 0401 01       		.uleb128 0x1
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 34


 1601 0402 9C       		.byte	0x9c
 1602 0403 25040000 		.4byte	0x425
 1603 0407 14       		.uleb128 0x14
 1604 0408 88020000 		.4byte	.LASF50
 1605 040c 01       		.byte	0x1
 1606 040d DF       		.byte	0xdf
 1607 040e 25040000 		.4byte	0x425
 1608 0412 03       		.uleb128 0x3
 1609 0413 91       		.byte	0x91
 1610 0414 F47E     		.sleb128 -140
 1611 0416 14       		.uleb128 0x14
 1612 0417 2F010000 		.4byte	.LASF32
 1613 041b 01       		.byte	0x1
 1614 041c E0       		.byte	0xe0
 1615 041d 3E000000 		.4byte	0x3e
 1616 0421 02       		.uleb128 0x2
 1617 0422 91       		.byte	0x91
 1618 0423 76       		.sleb128 -10
 1619 0424 00       		.byte	0
 1620 0425 0F       		.uleb128 0xf
 1621 0426 D1000000 		.4byte	0xd1
 1622 042a 35040000 		.4byte	0x435
 1623 042e 10       		.uleb128 0x10
 1624 042f D8000000 		.4byte	0xd8
 1625 0433 7F       		.byte	0x7f
 1626 0434 00       		.byte	0
 1627 0435 1A       		.uleb128 0x1a
 1628 0436 47030000 		.4byte	.LASF58
 1629 043a 08       		.byte	0x8
 1630 043b 9606     		.2byte	0x696
 1631 043d 41040000 		.4byte	0x441
 1632 0441 1B       		.uleb128 0x1b
 1633 0442 AD000000 		.4byte	0xad
 1634 0446 1C       		.uleb128 0x1c
 1635 0447 14030000 		.4byte	.LASF59
 1636 044b 01       		.byte	0x1
 1637 044c 04       		.byte	0x4
 1638 044d 72010000 		.4byte	0x172
 1639 0451 05       		.uleb128 0x5
 1640 0452 03       		.byte	0x3
 1641 0453 00000000 		.4byte	pfile
 1642 0457 1C       		.uleb128 0x1c
 1643 0458 1A030000 		.4byte	.LASF60
 1644 045c 01       		.byte	0x1
 1645 045d 05       		.byte	0x5
 1646 045e 97000000 		.4byte	0x97
 1647 0462 05       		.uleb128 0x5
 1648 0463 03       		.byte	0x3
 1649 0464 00000000 		.4byte	sd_ok
 1650 0468 0F       		.uleb128 0xf
 1651 0469 D1000000 		.4byte	0xd1
 1652 046d 78040000 		.4byte	0x478
 1653 0471 10       		.uleb128 0x10
 1654 0472 D8000000 		.4byte	0xd8
 1655 0476 0D       		.byte	0xd
 1656 0477 00       		.byte	0
 1657 0478 1C       		.uleb128 0x1c
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 35


 1658 0479 C5000000 		.4byte	.LASF61
 1659 047d 01       		.byte	0x1
 1660 047e 07       		.byte	0x7
 1661 047f 89040000 		.4byte	0x489
 1662 0483 05       		.uleb128 0x5
 1663 0484 03       		.byte	0x3
 1664 0485 00000000 		.4byte	set_time_file
 1665 0489 1D       		.uleb128 0x1d
 1666 048a 68040000 		.4byte	0x468
 1667 048e 0F       		.uleb128 0xf
 1668 048f D1000000 		.4byte	0xd1
 1669 0493 9E040000 		.4byte	0x49e
 1670 0497 10       		.uleb128 0x10
 1671 0498 D8000000 		.4byte	0xd8
 1672 049c 0B       		.byte	0xb
 1673 049d 00       		.byte	0
 1674 049e 1C       		.uleb128 0x1c
 1675 049f 44000000 		.4byte	.LASF62
 1676 04a3 01       		.byte	0x1
 1677 04a4 08       		.byte	0x8
 1678 04a5 AF040000 		.4byte	0x4af
 1679 04a9 05       		.uleb128 0x5
 1680 04aa 03       		.byte	0x3
 1681 04ab 00000000 		.4byte	format_file
 1682 04af 1D       		.uleb128 0x1d
 1683 04b0 8E040000 		.4byte	0x48e
 1684 04b4 0F       		.uleb128 0xf
 1685 04b5 C0010000 		.4byte	0x1c0
 1686 04b9 C5040000 		.4byte	0x4c5
 1687 04bd 1E       		.uleb128 0x1e
 1688 04be D8000000 		.4byte	0xd8
 1689 04c2 FF03     		.2byte	0x3ff
 1690 04c4 00       		.byte	0
 1691 04c5 1C       		.uleb128 0x1c
 1692 04c6 20030000 		.4byte	.LASF63
 1693 04ca 01       		.byte	0x1
 1694 04cb 0A       		.byte	0xa
 1695 04cc B4040000 		.4byte	0x4b4
 1696 04d0 05       		.uleb128 0x5
 1697 04d1 03       		.byte	0x3
 1698 04d2 00000000 		.4byte	sd_queue
 1699 04d6 1C       		.uleb128 0x1c
 1700 04d7 E7020000 		.4byte	.LASF64
 1701 04db 01       		.byte	0x1
 1702 04dc 0B       		.byte	0xb
 1703 04dd A2000000 		.4byte	0xa2
 1704 04e1 05       		.uleb128 0x5
 1705 04e2 03       		.byte	0x3
 1706 04e3 00000000 		.4byte	sd_head
 1707 04e7 1C       		.uleb128 0x1c
 1708 04e8 0E010000 		.4byte	.LASF65
 1709 04ec 01       		.byte	0x1
 1710 04ed 0B       		.byte	0xb
 1711 04ee A2000000 		.4byte	0xa2
 1712 04f2 05       		.uleb128 0x5
 1713 04f3 03       		.byte	0x3
 1714 04f4 00000000 		.4byte	sd_tail
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 36


 1715 04f8 00       		.byte	0
 1716              		.section	.debug_abbrev,"",%progbits
 1717              	.Ldebug_abbrev0:
 1718 0000 01       		.uleb128 0x1
 1719 0001 11       		.uleb128 0x11
 1720 0002 01       		.byte	0x1
 1721 0003 25       		.uleb128 0x25
 1722 0004 0E       		.uleb128 0xe
 1723 0005 13       		.uleb128 0x13
 1724 0006 0B       		.uleb128 0xb
 1725 0007 03       		.uleb128 0x3
 1726 0008 0E       		.uleb128 0xe
 1727 0009 1B       		.uleb128 0x1b
 1728 000a 0E       		.uleb128 0xe
 1729 000b 55       		.uleb128 0x55
 1730 000c 17       		.uleb128 0x17
 1731 000d 11       		.uleb128 0x11
 1732 000e 01       		.uleb128 0x1
 1733 000f 10       		.uleb128 0x10
 1734 0010 17       		.uleb128 0x17
 1735 0011 00       		.byte	0
 1736 0012 00       		.byte	0
 1737 0013 02       		.uleb128 0x2
 1738 0014 24       		.uleb128 0x24
 1739 0015 00       		.byte	0
 1740 0016 0B       		.uleb128 0xb
 1741 0017 0B       		.uleb128 0xb
 1742 0018 3E       		.uleb128 0x3e
 1743 0019 0B       		.uleb128 0xb
 1744 001a 03       		.uleb128 0x3
 1745 001b 0E       		.uleb128 0xe
 1746 001c 00       		.byte	0
 1747 001d 00       		.byte	0
 1748 001e 03       		.uleb128 0x3
 1749 001f 16       		.uleb128 0x16
 1750 0020 00       		.byte	0
 1751 0021 03       		.uleb128 0x3
 1752 0022 0E       		.uleb128 0xe
 1753 0023 3A       		.uleb128 0x3a
 1754 0024 0B       		.uleb128 0xb
 1755 0025 3B       		.uleb128 0x3b
 1756 0026 0B       		.uleb128 0xb
 1757 0027 49       		.uleb128 0x49
 1758 0028 13       		.uleb128 0x13
 1759 0029 00       		.byte	0
 1760 002a 00       		.byte	0
 1761 002b 04       		.uleb128 0x4
 1762 002c 24       		.uleb128 0x24
 1763 002d 00       		.byte	0
 1764 002e 0B       		.uleb128 0xb
 1765 002f 0B       		.uleb128 0xb
 1766 0030 3E       		.uleb128 0x3e
 1767 0031 0B       		.uleb128 0xb
 1768 0032 03       		.uleb128 0x3
 1769 0033 08       		.uleb128 0x8
 1770 0034 00       		.byte	0
 1771 0035 00       		.byte	0
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 37


 1772 0036 05       		.uleb128 0x5
 1773 0037 0F       		.uleb128 0xf
 1774 0038 00       		.byte	0
 1775 0039 0B       		.uleb128 0xb
 1776 003a 0B       		.uleb128 0xb
 1777 003b 49       		.uleb128 0x49
 1778 003c 13       		.uleb128 0x13
 1779 003d 00       		.byte	0
 1780 003e 00       		.byte	0
 1781 003f 06       		.uleb128 0x6
 1782 0040 13       		.uleb128 0x13
 1783 0041 00       		.byte	0
 1784 0042 03       		.uleb128 0x3
 1785 0043 0E       		.uleb128 0xe
 1786 0044 3C       		.uleb128 0x3c
 1787 0045 19       		.uleb128 0x19
 1788 0046 00       		.byte	0
 1789 0047 00       		.byte	0
 1790 0048 07       		.uleb128 0x7
 1791 0049 13       		.uleb128 0x13
 1792 004a 01       		.byte	0x1
 1793 004b 0B       		.uleb128 0xb
 1794 004c 0B       		.uleb128 0xb
 1795 004d 3A       		.uleb128 0x3a
 1796 004e 0B       		.uleb128 0xb
 1797 004f 3B       		.uleb128 0x3b
 1798 0050 0B       		.uleb128 0xb
 1799 0051 01       		.uleb128 0x1
 1800 0052 13       		.uleb128 0x13
 1801 0053 00       		.byte	0
 1802 0054 00       		.byte	0
 1803 0055 08       		.uleb128 0x8
 1804 0056 0D       		.uleb128 0xd
 1805 0057 00       		.byte	0
 1806 0058 03       		.uleb128 0x3
 1807 0059 0E       		.uleb128 0xe
 1808 005a 3A       		.uleb128 0x3a
 1809 005b 0B       		.uleb128 0xb
 1810 005c 3B       		.uleb128 0x3b
 1811 005d 0B       		.uleb128 0xb
 1812 005e 49       		.uleb128 0x49
 1813 005f 13       		.uleb128 0x13
 1814 0060 38       		.uleb128 0x38
 1815 0061 0B       		.uleb128 0xb
 1816 0062 00       		.byte	0
 1817 0063 00       		.byte	0
 1818 0064 09       		.uleb128 0x9
 1819 0065 0D       		.uleb128 0xd
 1820 0066 00       		.byte	0
 1821 0067 03       		.uleb128 0x3
 1822 0068 08       		.uleb128 0x8
 1823 0069 3A       		.uleb128 0x3a
 1824 006a 0B       		.uleb128 0xb
 1825 006b 3B       		.uleb128 0x3b
 1826 006c 05       		.uleb128 0x5
 1827 006d 49       		.uleb128 0x49
 1828 006e 13       		.uleb128 0x13
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 38


 1829 006f 38       		.uleb128 0x38
 1830 0070 0B       		.uleb128 0xb
 1831 0071 00       		.byte	0
 1832 0072 00       		.byte	0
 1833 0073 0A       		.uleb128 0xa
 1834 0074 0D       		.uleb128 0xd
 1835 0075 00       		.byte	0
 1836 0076 03       		.uleb128 0x3
 1837 0077 0E       		.uleb128 0xe
 1838 0078 3A       		.uleb128 0x3a
 1839 0079 0B       		.uleb128 0xb
 1840 007a 3B       		.uleb128 0x3b
 1841 007b 05       		.uleb128 0x5
 1842 007c 49       		.uleb128 0x49
 1843 007d 13       		.uleb128 0x13
 1844 007e 38       		.uleb128 0x38
 1845 007f 0B       		.uleb128 0xb
 1846 0080 00       		.byte	0
 1847 0081 00       		.byte	0
 1848 0082 0B       		.uleb128 0xb
 1849 0083 16       		.uleb128 0x16
 1850 0084 00       		.byte	0
 1851 0085 03       		.uleb128 0x3
 1852 0086 0E       		.uleb128 0xe
 1853 0087 3A       		.uleb128 0x3a
 1854 0088 0B       		.uleb128 0xb
 1855 0089 3B       		.uleb128 0x3b
 1856 008a 05       		.uleb128 0x5
 1857 008b 49       		.uleb128 0x49
 1858 008c 13       		.uleb128 0x13
 1859 008d 00       		.byte	0
 1860 008e 00       		.byte	0
 1861 008f 0C       		.uleb128 0xc
 1862 0090 04       		.uleb128 0x4
 1863 0091 01       		.byte	0x1
 1864 0092 0B       		.uleb128 0xb
 1865 0093 0B       		.uleb128 0xb
 1866 0094 3A       		.uleb128 0x3a
 1867 0095 0B       		.uleb128 0xb
 1868 0096 3B       		.uleb128 0x3b
 1869 0097 05       		.uleb128 0x5
 1870 0098 01       		.uleb128 0x1
 1871 0099 13       		.uleb128 0x13
 1872 009a 00       		.byte	0
 1873 009b 00       		.byte	0
 1874 009c 0D       		.uleb128 0xd
 1875 009d 28       		.uleb128 0x28
 1876 009e 00       		.byte	0
 1877 009f 03       		.uleb128 0x3
 1878 00a0 0E       		.uleb128 0xe
 1879 00a1 1C       		.uleb128 0x1c
 1880 00a2 0D       		.uleb128 0xd
 1881 00a3 00       		.byte	0
 1882 00a4 00       		.byte	0
 1883 00a5 0E       		.uleb128 0xe
 1884 00a6 0D       		.uleb128 0xd
 1885 00a7 00       		.byte	0
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 39


 1886 00a8 03       		.uleb128 0x3
 1887 00a9 08       		.uleb128 0x8
 1888 00aa 3A       		.uleb128 0x3a
 1889 00ab 0B       		.uleb128 0xb
 1890 00ac 3B       		.uleb128 0x3b
 1891 00ad 0B       		.uleb128 0xb
 1892 00ae 49       		.uleb128 0x49
 1893 00af 13       		.uleb128 0x13
 1894 00b0 38       		.uleb128 0x38
 1895 00b1 0B       		.uleb128 0xb
 1896 00b2 00       		.byte	0
 1897 00b3 00       		.byte	0
 1898 00b4 0F       		.uleb128 0xf
 1899 00b5 01       		.uleb128 0x1
 1900 00b6 01       		.byte	0x1
 1901 00b7 49       		.uleb128 0x49
 1902 00b8 13       		.uleb128 0x13
 1903 00b9 01       		.uleb128 0x1
 1904 00ba 13       		.uleb128 0x13
 1905 00bb 00       		.byte	0
 1906 00bc 00       		.byte	0
 1907 00bd 10       		.uleb128 0x10
 1908 00be 21       		.uleb128 0x21
 1909 00bf 00       		.byte	0
 1910 00c0 49       		.uleb128 0x49
 1911 00c1 13       		.uleb128 0x13
 1912 00c2 2F       		.uleb128 0x2f
 1913 00c3 0B       		.uleb128 0xb
 1914 00c4 00       		.byte	0
 1915 00c5 00       		.byte	0
 1916 00c6 11       		.uleb128 0x11
 1917 00c7 2E       		.uleb128 0x2e
 1918 00c8 00       		.byte	0
 1919 00c9 3F       		.uleb128 0x3f
 1920 00ca 19       		.uleb128 0x19
 1921 00cb 03       		.uleb128 0x3
 1922 00cc 0E       		.uleb128 0xe
 1923 00cd 3A       		.uleb128 0x3a
 1924 00ce 0B       		.uleb128 0xb
 1925 00cf 3B       		.uleb128 0x3b
 1926 00d0 0B       		.uleb128 0xb
 1927 00d1 27       		.uleb128 0x27
 1928 00d2 19       		.uleb128 0x19
 1929 00d3 11       		.uleb128 0x11
 1930 00d4 01       		.uleb128 0x1
 1931 00d5 12       		.uleb128 0x12
 1932 00d6 06       		.uleb128 0x6
 1933 00d7 40       		.uleb128 0x40
 1934 00d8 18       		.uleb128 0x18
 1935 00d9 9642     		.uleb128 0x2116
 1936 00db 19       		.uleb128 0x19
 1937 00dc 00       		.byte	0
 1938 00dd 00       		.byte	0
 1939 00de 12       		.uleb128 0x12
 1940 00df 2E       		.uleb128 0x2e
 1941 00e0 01       		.byte	0x1
 1942 00e1 3F       		.uleb128 0x3f
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 40


 1943 00e2 19       		.uleb128 0x19
 1944 00e3 03       		.uleb128 0x3
 1945 00e4 0E       		.uleb128 0xe
 1946 00e5 3A       		.uleb128 0x3a
 1947 00e6 0B       		.uleb128 0xb
 1948 00e7 3B       		.uleb128 0x3b
 1949 00e8 0B       		.uleb128 0xb
 1950 00e9 27       		.uleb128 0x27
 1951 00ea 19       		.uleb128 0x19
 1952 00eb 11       		.uleb128 0x11
 1953 00ec 01       		.uleb128 0x1
 1954 00ed 12       		.uleb128 0x12
 1955 00ee 06       		.uleb128 0x6
 1956 00ef 40       		.uleb128 0x40
 1957 00f0 18       		.uleb128 0x18
 1958 00f1 9642     		.uleb128 0x2116
 1959 00f3 19       		.uleb128 0x19
 1960 00f4 01       		.uleb128 0x1
 1961 00f5 13       		.uleb128 0x13
 1962 00f6 00       		.byte	0
 1963 00f7 00       		.byte	0
 1964 00f8 13       		.uleb128 0x13
 1965 00f9 05       		.uleb128 0x5
 1966 00fa 00       		.byte	0
 1967 00fb 03       		.uleb128 0x3
 1968 00fc 0E       		.uleb128 0xe
 1969 00fd 3A       		.uleb128 0x3a
 1970 00fe 0B       		.uleb128 0xb
 1971 00ff 3B       		.uleb128 0x3b
 1972 0100 0B       		.uleb128 0xb
 1973 0101 49       		.uleb128 0x49
 1974 0102 13       		.uleb128 0x13
 1975 0103 02       		.uleb128 0x2
 1976 0104 18       		.uleb128 0x18
 1977 0105 00       		.byte	0
 1978 0106 00       		.byte	0
 1979 0107 14       		.uleb128 0x14
 1980 0108 34       		.uleb128 0x34
 1981 0109 00       		.byte	0
 1982 010a 03       		.uleb128 0x3
 1983 010b 0E       		.uleb128 0xe
 1984 010c 3A       		.uleb128 0x3a
 1985 010d 0B       		.uleb128 0xb
 1986 010e 3B       		.uleb128 0x3b
 1987 010f 0B       		.uleb128 0xb
 1988 0110 49       		.uleb128 0x49
 1989 0111 13       		.uleb128 0x13
 1990 0112 02       		.uleb128 0x2
 1991 0113 18       		.uleb128 0x18
 1992 0114 00       		.byte	0
 1993 0115 00       		.byte	0
 1994 0116 15       		.uleb128 0x15
 1995 0117 0B       		.uleb128 0xb
 1996 0118 01       		.byte	0x1
 1997 0119 11       		.uleb128 0x11
 1998 011a 01       		.uleb128 0x1
 1999 011b 12       		.uleb128 0x12
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 41


 2000 011c 06       		.uleb128 0x6
 2001 011d 00       		.byte	0
 2002 011e 00       		.byte	0
 2003 011f 16       		.uleb128 0x16
 2004 0120 34       		.uleb128 0x34
 2005 0121 00       		.byte	0
 2006 0122 03       		.uleb128 0x3
 2007 0123 08       		.uleb128 0x8
 2008 0124 3A       		.uleb128 0x3a
 2009 0125 0B       		.uleb128 0xb
 2010 0126 3B       		.uleb128 0x3b
 2011 0127 0B       		.uleb128 0xb
 2012 0128 49       		.uleb128 0x49
 2013 0129 13       		.uleb128 0x13
 2014 012a 02       		.uleb128 0x2
 2015 012b 18       		.uleb128 0x18
 2016 012c 00       		.byte	0
 2017 012d 00       		.byte	0
 2018 012e 17       		.uleb128 0x17
 2019 012f 2E       		.uleb128 0x2e
 2020 0130 01       		.byte	0x1
 2021 0131 3F       		.uleb128 0x3f
 2022 0132 19       		.uleb128 0x19
 2023 0133 03       		.uleb128 0x3
 2024 0134 0E       		.uleb128 0xe
 2025 0135 3A       		.uleb128 0x3a
 2026 0136 0B       		.uleb128 0xb
 2027 0137 3B       		.uleb128 0x3b
 2028 0138 0B       		.uleb128 0xb
 2029 0139 11       		.uleb128 0x11
 2030 013a 01       		.uleb128 0x1
 2031 013b 12       		.uleb128 0x12
 2032 013c 06       		.uleb128 0x6
 2033 013d 40       		.uleb128 0x40
 2034 013e 18       		.uleb128 0x18
 2035 013f 9642     		.uleb128 0x2116
 2036 0141 19       		.uleb128 0x19
 2037 0142 01       		.uleb128 0x1
 2038 0143 13       		.uleb128 0x13
 2039 0144 00       		.byte	0
 2040 0145 00       		.byte	0
 2041 0146 18       		.uleb128 0x18
 2042 0147 2E       		.uleb128 0x2e
 2043 0148 01       		.byte	0x1
 2044 0149 3F       		.uleb128 0x3f
 2045 014a 19       		.uleb128 0x19
 2046 014b 03       		.uleb128 0x3
 2047 014c 0E       		.uleb128 0xe
 2048 014d 3A       		.uleb128 0x3a
 2049 014e 0B       		.uleb128 0xb
 2050 014f 3B       		.uleb128 0x3b
 2051 0150 0B       		.uleb128 0xb
 2052 0151 27       		.uleb128 0x27
 2053 0152 19       		.uleb128 0x19
 2054 0153 11       		.uleb128 0x11
 2055 0154 01       		.uleb128 0x1
 2056 0155 12       		.uleb128 0x12
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 42


 2057 0156 06       		.uleb128 0x6
 2058 0157 40       		.uleb128 0x40
 2059 0158 18       		.uleb128 0x18
 2060 0159 9742     		.uleb128 0x2117
 2061 015b 19       		.uleb128 0x19
 2062 015c 01       		.uleb128 0x1
 2063 015d 13       		.uleb128 0x13
 2064 015e 00       		.byte	0
 2065 015f 00       		.byte	0
 2066 0160 19       		.uleb128 0x19
 2067 0161 05       		.uleb128 0x5
 2068 0162 00       		.byte	0
 2069 0163 03       		.uleb128 0x3
 2070 0164 08       		.uleb128 0x8
 2071 0165 3A       		.uleb128 0x3a
 2072 0166 0B       		.uleb128 0xb
 2073 0167 3B       		.uleb128 0x3b
 2074 0168 0B       		.uleb128 0xb
 2075 0169 49       		.uleb128 0x49
 2076 016a 13       		.uleb128 0x13
 2077 016b 02       		.uleb128 0x2
 2078 016c 18       		.uleb128 0x18
 2079 016d 00       		.byte	0
 2080 016e 00       		.byte	0
 2081 016f 1A       		.uleb128 0x1a
 2082 0170 34       		.uleb128 0x34
 2083 0171 00       		.byte	0
 2084 0172 03       		.uleb128 0x3
 2085 0173 0E       		.uleb128 0xe
 2086 0174 3A       		.uleb128 0x3a
 2087 0175 0B       		.uleb128 0xb
 2088 0176 3B       		.uleb128 0x3b
 2089 0177 05       		.uleb128 0x5
 2090 0178 49       		.uleb128 0x49
 2091 0179 13       		.uleb128 0x13
 2092 017a 3F       		.uleb128 0x3f
 2093 017b 19       		.uleb128 0x19
 2094 017c 3C       		.uleb128 0x3c
 2095 017d 19       		.uleb128 0x19
 2096 017e 00       		.byte	0
 2097 017f 00       		.byte	0
 2098 0180 1B       		.uleb128 0x1b
 2099 0181 35       		.uleb128 0x35
 2100 0182 00       		.byte	0
 2101 0183 49       		.uleb128 0x49
 2102 0184 13       		.uleb128 0x13
 2103 0185 00       		.byte	0
 2104 0186 00       		.byte	0
 2105 0187 1C       		.uleb128 0x1c
 2106 0188 34       		.uleb128 0x34
 2107 0189 00       		.byte	0
 2108 018a 03       		.uleb128 0x3
 2109 018b 0E       		.uleb128 0xe
 2110 018c 3A       		.uleb128 0x3a
 2111 018d 0B       		.uleb128 0xb
 2112 018e 3B       		.uleb128 0x3b
 2113 018f 0B       		.uleb128 0xb
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 43


 2114 0190 49       		.uleb128 0x49
 2115 0191 13       		.uleb128 0x13
 2116 0192 3F       		.uleb128 0x3f
 2117 0193 19       		.uleb128 0x19
 2118 0194 02       		.uleb128 0x2
 2119 0195 18       		.uleb128 0x18
 2120 0196 00       		.byte	0
 2121 0197 00       		.byte	0
 2122 0198 1D       		.uleb128 0x1d
 2123 0199 26       		.uleb128 0x26
 2124 019a 00       		.byte	0
 2125 019b 49       		.uleb128 0x49
 2126 019c 13       		.uleb128 0x13
 2127 019d 00       		.byte	0
 2128 019e 00       		.byte	0
 2129 019f 1E       		.uleb128 0x1e
 2130 01a0 21       		.uleb128 0x21
 2131 01a1 00       		.byte	0
 2132 01a2 49       		.uleb128 0x49
 2133 01a3 13       		.uleb128 0x13
 2134 01a4 2F       		.uleb128 0x2f
 2135 01a5 05       		.uleb128 0x5
 2136 01a6 00       		.byte	0
 2137 01a7 00       		.byte	0
 2138 01a8 00       		.byte	0
 2139              		.section	.debug_aranges,"",%progbits
 2140 0000 5C000000 		.4byte	0x5c
 2141 0004 0200     		.2byte	0x2
 2142 0006 00000000 		.4byte	.Ldebug_info0
 2143 000a 04       		.byte	0x4
 2144 000b 00       		.byte	0
 2145 000c 0000     		.2byte	0
 2146 000e 0000     		.2byte	0
 2147 0010 00000000 		.4byte	.LFB63
 2148 0014 1C000000 		.4byte	.LFE63-.LFB63
 2149 0018 00000000 		.4byte	.LFB64
 2150 001c 0A000000 		.4byte	.LFE64-.LFB64
 2151 0020 00000000 		.4byte	.LFB65
 2152 0024 A8010000 		.4byte	.LFE65-.LFB65
 2153 0028 00000000 		.4byte	.LFB66
 2154 002c 90010000 		.4byte	.LFE66-.LFB66
 2155 0030 00000000 		.4byte	.LFB67
 2156 0034 60010000 		.4byte	.LFE67-.LFB67
 2157 0038 00000000 		.4byte	.LFB68
 2158 003c 48000000 		.4byte	.LFE68-.LFB68
 2159 0040 00000000 		.4byte	.LFB69
 2160 0044 50000000 		.4byte	.LFE69-.LFB69
 2161 0048 00000000 		.4byte	.LFB70
 2162 004c 28000000 		.4byte	.LFE70-.LFB70
 2163 0050 00000000 		.4byte	.LFB71
 2164 0054 78000000 		.4byte	.LFE71-.LFB71
 2165 0058 00000000 		.4byte	0
 2166 005c 00000000 		.4byte	0
 2167              		.section	.debug_ranges,"",%progbits
 2168              	.Ldebug_ranges0:
 2169 0000 00000000 		.4byte	.LFB63
 2170 0004 1C000000 		.4byte	.LFE63
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 44


 2171 0008 00000000 		.4byte	.LFB64
 2172 000c 0A000000 		.4byte	.LFE64
 2173 0010 00000000 		.4byte	.LFB65
 2174 0014 A8010000 		.4byte	.LFE65
 2175 0018 00000000 		.4byte	.LFB66
 2176 001c 90010000 		.4byte	.LFE66
 2177 0020 00000000 		.4byte	.LFB67
 2178 0024 60010000 		.4byte	.LFE67
 2179 0028 00000000 		.4byte	.LFB68
 2180 002c 48000000 		.4byte	.LFE68
 2181 0030 00000000 		.4byte	.LFB69
 2182 0034 50000000 		.4byte	.LFE69
 2183 0038 00000000 		.4byte	.LFB70
 2184 003c 28000000 		.4byte	.LFE70
 2185 0040 00000000 		.4byte	.LFB71
 2186 0044 78000000 		.4byte	.LFE71
 2187 0048 00000000 		.4byte	0
 2188 004c 00000000 		.4byte	0
 2189              		.section	.debug_line,"",%progbits
 2190              	.Ldebug_line0:
 2191 0000 54030000 		.section	.debug_str,"MS",%progbits,1
 2191      02008401 
 2191      00000201 
 2191      FB0E0D00 
 2191      01010101 
 2192              	.LASF47:
 2193 0000 73645F69 		.ascii	"sd_init\000"
 2193      6E697400 
 2194              	.LASF30:
 2195 0008 46535F57 		.ascii	"FS_WRITEMODE_FAST\000"
 2195      52495445 
 2195      4D4F4445 
 2195      5F464153 
 2195      5400
 2196              	.LASF43:
 2197 001a 64617465 		.ascii	"date_str\000"
 2197      5F737472 
 2197      00
 2198              	.LASF55:
 2199 0023 73645F62 		.ascii	"sd_buffer\000"
 2199      75666665 
 2199      7200
 2200              	.LASF52:
 2201 002d 61746F6D 		.ascii	"atomic_state\000"
 2201      69635F73 
 2201      74617465 
 2201      00
 2202              	.LASF2:
 2203 003a 73686F72 		.ascii	"short int\000"
 2203      7420696E 
 2203      7400
 2204              	.LASF62:
 2205 0044 666F726D 		.ascii	"format_file\000"
 2205      61745F66 
 2205      696C6500 
 2206              	.LASF44:
 2207 0050 66696C65 		.ascii	"file_str\000"
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 45


 2207      5F737472 
 2207      00
 2208              	.LASF27:
 2209 0059 46535F46 		.ascii	"FS_FILETIME\000"
 2209      494C4554 
 2209      494D4500 
 2210              	.LASF51:
 2211 0065 746D705F 		.ascii	"tmp_time\000"
 2211      74696D65 
 2211      00
 2212              	.LASF8:
 2213 006e 5F5F7569 		.ascii	"__uint32_t\000"
 2213      6E743332 
 2213      5F7400
 2214              	.LASF54:
 2215 0079 73645F72 		.ascii	"sd_read\000"
 2215      65616400 
 2216              	.LASF4:
 2217 0081 5F5F7569 		.ascii	"__uint16_t\000"
 2217      6E743136 
 2217      5F7400
 2218              	.LASF41:
 2219 008c 706F7765 		.ascii	"power_interrupt\000"
 2219      725F696E 
 2219      74657272 
 2219      75707400 
 2220              	.LASF39:
 2221 009c 79656172 		.ascii	"year\000"
 2221      00
 2222              	.LASF31:
 2223 00a1 6D696C6C 		.ascii	"millicounter\000"
 2223      69636F75 
 2223      6E746572 
 2223      00
 2224              	.LASF13:
 2225 00ae 75696E74 		.ascii	"uint8_t\000"
 2225      385F7400 
 2226              	.LASF46:
 2227 00b6 66696C65 		.ascii	"file_timestamp\000"
 2227      5F74696D 
 2227      65737461 
 2227      6D7000
 2228              	.LASF61:
 2229 00c5 7365745F 		.ascii	"set_time_file\000"
 2229      74696D65 
 2229      5F66696C 
 2229      6500
 2230              	.LASF53:
 2231 00d3 73645F77 		.ascii	"sd_write\000"
 2231      72697465 
 2231      00
 2232              	.LASF17:
 2233 00dc 666C6F61 		.ascii	"float\000"
 2233      7400
 2234              	.LASF28:
 2235 00e2 46535F57 		.ascii	"FS_WRITEMODE_SAFE\000"
 2235      52495445 
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 46


 2235      4D4F4445 
 2235      5F534146 
 2235      4500
 2236              	.LASF10:
 2237 00f4 6C6F6E67 		.ascii	"long long int\000"
 2237      206C6F6E 
 2237      6720696E 
 2237      7400
 2238              	.LASF48:
 2239 0102 73645F74 		.ascii	"sd_time_set\000"
 2239      696D655F 
 2239      73657400 
 2240              	.LASF65:
 2241 010e 73645F74 		.ascii	"sd_tail\000"
 2241      61696C00 
 2242              	.LASF22:
 2243 0116 59656172 		.ascii	"Year\000"
 2243      00
 2244              	.LASF3:
 2245 011b 5F5F7569 		.ascii	"__uint8_t\000"
 2245      6E74385F 
 2245      7400
 2246              	.LASF40:
 2247 0125 54696D65 		.ascii	"Time\000"
 2247      00
 2248              	.LASF36:
 2249 012a 686F7572 		.ascii	"hour\000"
 2249      00
 2250              	.LASF32:
 2251 012f 6C656E67 		.ascii	"length\000"
 2251      746800
 2252              	.LASF1:
 2253 0136 756E7369 		.ascii	"unsigned char\000"
 2253      676E6564 
 2253      20636861 
 2253      7200
 2254              	.LASF45:
 2255 0144 66696C65 		.ascii	"file_time\000"
 2255      5F74696D 
 2255      6500
 2256              	.LASF21:
 2257 014e 46535F46 		.ascii	"FS_FILE\000"
 2257      494C4500 
 2258              	.LASF0:
 2259 0156 7369676E 		.ascii	"signed char\000"
 2259      65642063 
 2259      68617200 
 2260              	.LASF38:
 2261 0162 7365636F 		.ascii	"second\000"
 2261      6E6400
 2262              	.LASF11:
 2263 0169 6C6F6E67 		.ascii	"long long unsigned int\000"
 2263      206C6F6E 
 2263      6720756E 
 2263      7369676E 
 2263      65642069 
 2264              	.LASF16:
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 47


 2265 0180 75696E74 		.ascii	"uint32_t\000"
 2265      33325F74 
 2265      00
 2266              	.LASF12:
 2267 0189 756E7369 		.ascii	"unsigned int\000"
 2267      676E6564 
 2267      20696E74 
 2267      00
 2268              	.LASF14:
 2269 0196 75696E74 		.ascii	"uint16_t\000"
 2269      31365F74 
 2269      00
 2270              	.LASF9:
 2271 019f 6C6F6E67 		.ascii	"long unsigned int\000"
 2271      20756E73 
 2271      69676E65 
 2271      6420696E 
 2271      7400
 2272              	.LASF49:
 2273 01b1 74696D65 		.ascii	"time\000"
 2273      00
 2274              	.LASF5:
 2275 01b6 73686F72 		.ascii	"short unsigned int\000"
 2275      7420756E 
 2275      7369676E 
 2275      65642069 
 2275      6E7400
 2276              	.LASF24:
 2277 01c9 486F7572 		.ascii	"Hour\000"
 2277      00
 2278              	.LASF19:
 2279 01ce 63686172 		.ascii	"char\000"
 2279      00
 2280              	.LASF7:
 2281 01d3 6C6F6E67 		.ascii	"long int\000"
 2281      20696E74 
 2281      00
 2282              	.LASF15:
 2283 01dc 696E7433 		.ascii	"int32_t\000"
 2283      325F7400 
 2284              	.LASF35:
 2285 01e4 6D6F6E74 		.ascii	"month\000"
 2285      6800
 2286              	.LASF34:
 2287 01ea 44617461 		.ascii	"DataPacket\000"
 2287      5061636B 
 2287      657400
 2288              	.LASF66:
 2289 01f5 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2289      4320342E 
 2289      392E3320 
 2289      32303135 
 2289      30333033 
 2290 0228 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2290      20726576 
 2290      6973696F 
 2290      6E203232 
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 48


 2290      31323230 
 2291 025b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2291      66756E63 
 2291      74696F6E 
 2291      2D736563 
 2291      74696F6E 
 2292              	.LASF33:
 2293 0283 64617461 		.ascii	"data\000"
 2293      00
 2294              	.LASF50:
 2295 0288 62756666 		.ascii	"buffer\000"
 2295      657200
 2296              	.LASF37:
 2297 028f 6D696E75 		.ascii	"minute\000"
 2297      746500
 2298              	.LASF68:
 2299 0296 443A5C44 		.ascii	"D:\\Downloads\\FRUCD\\Node-Beaver\\Node-Beaver\\Nod"
 2299      6F776E6C 
 2299      6F616473 
 2299      5C465255 
 2299      43445C4E 
 2300 02c4 652D4265 		.ascii	"e-Beaver.cydsn\000"
 2300      61766572 
 2300      2E637964 
 2300      736E00
 2301              	.LASF26:
 2302 02d3 5365636F 		.ascii	"Second\000"
 2302      6E6400
 2303              	.LASF67:
 2304 02da 73645F6D 		.ascii	"sd_manager.c\000"
 2304      616E6167 
 2304      65722E63 
 2304      00
 2305              	.LASF64:
 2306 02e7 73645F68 		.ascii	"sd_head\000"
 2306      65616400 
 2307              	.LASF18:
 2308 02ef 646F7562 		.ascii	"double\000"
 2308      6C6500
 2309              	.LASF29:
 2310 02f6 46535F57 		.ascii	"FS_WRITEMODE_MEDIUM\000"
 2310      52495445 
 2310      4D4F4445 
 2310      5F4D4544 
 2310      49554D00 
 2311              	.LASF6:
 2312 030a 5F5F696E 		.ascii	"__int32_t\000"
 2312      7433325F 
 2312      7400
 2313              	.LASF59:
 2314 0314 7066696C 		.ascii	"pfile\000"
 2314      6500
 2315              	.LASF60:
 2316 031a 73645F6F 		.ascii	"sd_ok\000"
 2316      6B00
 2317              	.LASF63:
 2318 0320 73645F71 		.ascii	"sd_queue\000"
ARM GAS  D:\Windows\AppData\Local\Temp\ccnhmwwt.s 			page 49


 2318      75657565 
 2318      00
 2319              	.LASF20:
 2320 0329 73697A65 		.ascii	"sizetype\000"
 2320      74797065 
 2320      00
 2321              	.LASF56:
 2322 0332 73645F73 		.ascii	"sd_stop\000"
 2322      746F7000 
 2323              	.LASF42:
 2324 033a 73645F69 		.ascii	"sd_interrupt\000"
 2324      6E746572 
 2324      72757074 
 2324      00
 2325              	.LASF58:
 2326 0347 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2326      52784275 
 2326      66666572 
 2326      00
 2327              	.LASF23:
 2328 0354 4D6F6E74 		.ascii	"Month\000"
 2328      6800
 2329              	.LASF25:
 2330 035a 4D696E75 		.ascii	"Minute\000"
 2330      746500
 2331              	.LASF57:
 2332 0361 73645F77 		.ascii	"sd_writetest\000"
 2332      72697465 
 2332      74657374 
 2332      00
 2333              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
